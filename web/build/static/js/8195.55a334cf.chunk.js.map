{"version":3,"file":"static/js/8195.55a334cf.chunk.js","mappings":"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","sources":["../node_modules/cose-base/cose-base.js","../node_modules/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js","../node_modules/mermaid/dist/chunks/mermaid.core/cose-bilkent-S5V4N54A.mjs","../node_modules/layout-base/layout-base.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"layout-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"layout-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"coseBase\"] = factory(require(\"layout-base\"));\n\telse\n\t\troot[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n\nfunction CoSEConstants() {}\n\n//CoSEConstants inherits static props in FDLayoutConstants\nfor (var prop in FDLayoutConstants) {\n  CoSEConstants[prop] = FDLayoutConstants[prop];\n}\n\nCoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\nCoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\nCoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\nCoSEConstants.TILE = true;\nCoSEConstants.TILING_PADDING_VERTICAL = 10;\nCoSEConstants.TILING_PADDING_HORIZONTAL = 10;\nCoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false; // make this true when cose is used incrementally as a part of other non-incremental layout\n\nmodule.exports = CoSEConstants;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutEdge = __webpack_require__(0).FDLayoutEdge;\n\nfunction CoSEEdge(source, target, vEdge) {\n  FDLayoutEdge.call(this, source, target, vEdge);\n}\n\nCoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\nfor (var prop in FDLayoutEdge) {\n  CoSEEdge[prop] = FDLayoutEdge[prop];\n}\n\nmodule.exports = CoSEEdge;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph = __webpack_require__(0).LGraph;\n\nfunction CoSEGraph(parent, graphMgr, vGraph) {\n  LGraph.call(this, parent, graphMgr, vGraph);\n}\n\nCoSEGraph.prototype = Object.create(LGraph.prototype);\nfor (var prop in LGraph) {\n  CoSEGraph[prop] = LGraph[prop];\n}\n\nmodule.exports = CoSEGraph;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphManager = __webpack_require__(0).LGraphManager;\n\nfunction CoSEGraphManager(layout) {\n  LGraphManager.call(this, layout);\n}\n\nCoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\nfor (var prop in LGraphManager) {\n  CoSEGraphManager[prop] = LGraphManager[prop];\n}\n\nmodule.exports = CoSEGraphManager;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutNode = __webpack_require__(0).FDLayoutNode;\nvar IMath = __webpack_require__(0).IMath;\n\nfunction CoSENode(gm, loc, size, vNode) {\n  FDLayoutNode.call(this, gm, loc, size, vNode);\n}\n\nCoSENode.prototype = Object.create(FDLayoutNode.prototype);\nfor (var prop in FDLayoutNode) {\n  CoSENode[prop] = FDLayoutNode[prop];\n}\n\nCoSENode.prototype.move = function () {\n  var layout = this.graphManager.getLayout();\n  this.displacementX = layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n  this.displacementY = layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n\n  if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n  }\n\n  if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n  }\n\n  // a simple node, just move it\n  if (this.child == null) {\n    this.moveBy(this.displacementX, this.displacementY);\n  }\n  // an empty compound node, again just move it\n  else if (this.child.getNodes().length == 0) {\n      this.moveBy(this.displacementX, this.displacementY);\n    }\n    // non-empty compound node, propogate movement to children as well\n    else {\n        this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n      }\n\n  layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  this.displacementX = 0;\n  this.displacementY = 0;\n};\n\nCoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n  var nodes = this.getChild().getNodes();\n  var node;\n  for (var i = 0; i < nodes.length; i++) {\n    node = nodes[i];\n    if (node.getChild() == null) {\n      node.moveBy(dX, dY);\n      node.displacementX += dX;\n      node.displacementY += dY;\n    } else {\n      node.propogateDisplacementToChildren(dX, dY);\n    }\n  }\n};\n\nCoSENode.prototype.setPred1 = function (pred1) {\n  this.pred1 = pred1;\n};\n\nCoSENode.prototype.getPred1 = function () {\n  return pred1;\n};\n\nCoSENode.prototype.getPred2 = function () {\n  return pred2;\n};\n\nCoSENode.prototype.setNext = function (next) {\n  this.next = next;\n};\n\nCoSENode.prototype.getNext = function () {\n  return next;\n};\n\nCoSENode.prototype.setProcessed = function (processed) {\n  this.processed = processed;\n};\n\nCoSENode.prototype.isProcessed = function () {\n  return processed;\n};\n\nmodule.exports = CoSENode;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayout = __webpack_require__(0).FDLayout;\nvar CoSEGraphManager = __webpack_require__(4);\nvar CoSEGraph = __webpack_require__(3);\nvar CoSENode = __webpack_require__(5);\nvar CoSEEdge = __webpack_require__(2);\nvar CoSEConstants = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\nvar LayoutConstants = __webpack_require__(0).LayoutConstants;\nvar Point = __webpack_require__(0).Point;\nvar PointD = __webpack_require__(0).PointD;\nvar Layout = __webpack_require__(0).Layout;\nvar Integer = __webpack_require__(0).Integer;\nvar IGeometry = __webpack_require__(0).IGeometry;\nvar LGraph = __webpack_require__(0).LGraph;\nvar Transform = __webpack_require__(0).Transform;\n\nfunction CoSELayout() {\n  FDLayout.call(this);\n\n  this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n}\n\nCoSELayout.prototype = Object.create(FDLayout.prototype);\n\nfor (var prop in FDLayout) {\n  CoSELayout[prop] = FDLayout[prop];\n}\n\nCoSELayout.prototype.newGraphManager = function () {\n  var gm = new CoSEGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nCoSELayout.prototype.newGraph = function (vGraph) {\n  return new CoSEGraph(null, this.graphManager, vGraph);\n};\n\nCoSELayout.prototype.newNode = function (vNode) {\n  return new CoSENode(this.graphManager, vNode);\n};\n\nCoSELayout.prototype.newEdge = function (vEdge) {\n  return new CoSEEdge(null, null, vEdge);\n};\n\nCoSELayout.prototype.initParameters = function () {\n  FDLayout.prototype.initParameters.call(this, arguments);\n  if (!this.isSubLayout) {\n    if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n      this.idealEdgeLength = 10;\n    } else {\n      this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n    }\n\n    this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n    this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n    this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n    this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n    this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n    this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n    this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n\n    // variables for tree reduction support\n    this.prunedNodesAll = [];\n    this.growTreeIterations = 0;\n    this.afterGrowthIterations = 0;\n    this.isTreeGrowing = false;\n    this.isGrowthFinished = false;\n\n    // variables for cooling\n    this.coolingCycle = 0;\n    this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n    this.finalTemperature = FDLayoutConstants.CONVERGENCE_CHECK_PERIOD / this.maxIterations;\n    this.coolingAdjuster = 1;\n  }\n};\n\nCoSELayout.prototype.layout = function () {\n  var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  if (createBendsAsNeeded) {\n    this.createBendpoints();\n    this.graphManager.resetAllEdges();\n  }\n\n  this.level = 0;\n  return this.classicLayout();\n};\n\nCoSELayout.prototype.classicLayout = function () {\n  this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n  this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n  this.calcNoOfChildrenForAllNodes();\n  this.graphManager.calcLowestCommonAncestors();\n  this.graphManager.calcInclusionTreeDepths();\n  this.graphManager.getRoot().calcEstimatedSize();\n  this.calcIdealEdgeLengths();\n\n  if (!this.incremental) {\n    var forest = this.getFlatForest();\n\n    // The graph associated with this layout is flat and a forest\n    if (forest.length > 0) {\n      this.positionNodesRadially(forest);\n    }\n    // The graph associated with this layout is not flat or a forest\n    else {\n        // Reduce the trees when incremental mode is not enabled and graph is not a forest \n        this.reduceTrees();\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.positionNodesRandomly();\n      }\n  } else {\n    if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n      // Reduce the trees in incremental mode if only this constant is set to true \n      this.reduceTrees();\n      // Update nodes that gravity will be applied\n      this.graphManager.resetAllNodesToApplyGravitation();\n      var allNodes = new Set(this.getAllNodes());\n      var intersection = this.nodesWithGravity.filter(function (x) {\n        return allNodes.has(x);\n      });\n      this.graphManager.setAllNodesToApplyGravitation(intersection);\n    }\n  }\n\n  this.initSpringEmbedder();\n  this.runSpringEmbedder();\n\n  return true;\n};\n\nCoSELayout.prototype.tick = function () {\n  this.totalIterations++;\n\n  if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.prunedNodesAll.length > 0) {\n      this.isTreeGrowing = true;\n    } else {\n      return true;\n    }\n  }\n\n  if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.isConverged()) {\n      if (this.prunedNodesAll.length > 0) {\n        this.isTreeGrowing = true;\n      } else {\n        return true;\n      }\n    }\n\n    this.coolingCycle++;\n\n    if (this.layoutQuality == 0) {\n      // quality - \"draft\"\n      this.coolingAdjuster = this.coolingCycle;\n    } else if (this.layoutQuality == 1) {\n      // quality - \"default\"\n      this.coolingAdjuster = this.coolingCycle / 3;\n    }\n\n    // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n    this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n    this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n  }\n  // Operations while tree is growing again \n  if (this.isTreeGrowing) {\n    if (this.growTreeIterations % 10 == 0) {\n      if (this.prunedNodesAll.length > 0) {\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.growTree(this.prunedNodesAll);\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      } else {\n        this.isTreeGrowing = false;\n        this.isGrowthFinished = true;\n      }\n    }\n    this.growTreeIterations++;\n  }\n  // Operations after growth is finished\n  if (this.isGrowthFinished) {\n    if (this.isConverged()) {\n      return true;\n    }\n    if (this.afterGrowthIterations % 10 == 0) {\n      this.graphManager.updateBounds();\n      this.updateGrid();\n    }\n    this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n    this.afterGrowthIterations++;\n  }\n\n  var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n  var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n\n  this.totalDisplacement = 0;\n  this.graphManager.updateBounds();\n  this.calcSpringForces();\n  this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n  this.calcGravitationalForces();\n  this.moveNodes();\n  this.animate();\n\n  return false; // Layout is not ended yet return false\n};\n\nCoSELayout.prototype.getPositionsData = function () {\n  var allNodes = this.graphManager.getAllNodes();\n  var pData = {};\n  for (var i = 0; i < allNodes.length; i++) {\n    var rect = allNodes[i].rect;\n    var id = allNodes[i].id;\n    pData[id] = {\n      id: id,\n      x: rect.getCenterX(),\n      y: rect.getCenterY(),\n      w: rect.width,\n      h: rect.height\n    };\n  }\n\n  return pData;\n};\n\nCoSELayout.prototype.runSpringEmbedder = function () {\n  this.initialAnimationPeriod = 25;\n  this.animationPeriod = this.initialAnimationPeriod;\n  var layoutEnded = false;\n\n  // If aminate option is 'during' signal that layout is supposed to start iterating\n  if (FDLayoutConstants.ANIMATE === 'during') {\n    this.emit('layoutstarted');\n  } else {\n    // If aminate option is 'during' tick() function will be called on index.js\n    while (!layoutEnded) {\n      layoutEnded = this.tick();\n    }\n\n    this.graphManager.updateBounds();\n  }\n};\n\nCoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n  var nodeList = [];\n  var graph;\n\n  var graphs = this.graphManager.getGraphs();\n  var size = graphs.length;\n  var i;\n  for (i = 0; i < size; i++) {\n    graph = graphs[i];\n\n    graph.updateConnected();\n\n    if (!graph.isConnected) {\n      nodeList = nodeList.concat(graph.getNodes());\n    }\n  }\n\n  return nodeList;\n};\n\nCoSELayout.prototype.createBendpoints = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  var visited = new Set();\n  var i;\n  for (i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n\n    if (!visited.has(edge)) {\n      var source = edge.getSource();\n      var target = edge.getTarget();\n\n      if (source == target) {\n        edge.getBendpoints().push(new PointD());\n        edge.getBendpoints().push(new PointD());\n        this.createDummyNodesForBendpoints(edge);\n        visited.add(edge);\n      } else {\n        var edgeList = [];\n\n        edgeList = edgeList.concat(source.getEdgeListToNode(target));\n        edgeList = edgeList.concat(target.getEdgeListToNode(source));\n\n        if (!visited.has(edgeList[0])) {\n          if (edgeList.length > 1) {\n            var k;\n            for (k = 0; k < edgeList.length; k++) {\n              var multiEdge = edgeList[k];\n              multiEdge.getBendpoints().push(new PointD());\n              this.createDummyNodesForBendpoints(multiEdge);\n            }\n          }\n          edgeList.forEach(function (edge) {\n            visited.add(edge);\n          });\n        }\n      }\n    }\n\n    if (visited.size == edges.length) {\n      break;\n    }\n  }\n};\n\nCoSELayout.prototype.positionNodesRadially = function (forest) {\n  // We tile the trees to a grid row by row; first tree starts at (0,0)\n  var currentStartingPoint = new Point(0, 0);\n  var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n  var height = 0;\n  var currentY = 0;\n  var currentX = 0;\n  var point = new PointD(0, 0);\n\n  for (var i = 0; i < forest.length; i++) {\n    if (i % numberOfColumns == 0) {\n      // Start of a new row, make the x coordinate 0, increment the\n      // y coordinate with the max height of the previous row\n      currentX = 0;\n      currentY = height;\n\n      if (i != 0) {\n        currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n      }\n\n      height = 0;\n    }\n\n    var tree = forest[i];\n\n    // Find the center of the tree\n    var centerNode = Layout.findCenterOfTree(tree);\n\n    // Set the staring point of the next tree\n    currentStartingPoint.x = currentX;\n    currentStartingPoint.y = currentY;\n\n    // Do a radial layout starting with the center\n    point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n\n    if (point.y > height) {\n      height = Math.floor(point.y);\n    }\n\n    currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n  }\n\n  this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n};\n\nCoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n  var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n  CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n  var bounds = LGraph.calculateBounds(tree);\n\n  var transform = new Transform();\n  transform.setDeviceOrgX(bounds.getMinX());\n  transform.setDeviceOrgY(bounds.getMinY());\n  transform.setWorldOrgX(startingPoint.x);\n  transform.setWorldOrgY(startingPoint.y);\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    node.transform(transform);\n  }\n\n  var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n\n  return transform.inverseTransformPoint(bottomRight);\n};\n\nCoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n  // First, position this node by finding its angle.\n  var halfInterval = (endAngle - startAngle + 1) / 2;\n\n  if (halfInterval < 0) {\n    halfInterval += 180;\n  }\n\n  var nodeAngle = (halfInterval + startAngle) % 360;\n  var teta = nodeAngle * IGeometry.TWO_PI / 360;\n\n  // Make polar to java cordinate conversion.\n  var cos_teta = Math.cos(teta);\n  var x_ = distance * Math.cos(teta);\n  var y_ = distance * Math.sin(teta);\n\n  node.setCenter(x_, y_);\n\n  // Traverse all neighbors of this node and recursively call this\n  // function.\n  var neighborEdges = [];\n  neighborEdges = neighborEdges.concat(node.getEdges());\n  var childCount = neighborEdges.length;\n\n  if (parentOfNode != null) {\n    childCount--;\n  }\n\n  var branchCount = 0;\n\n  var incEdgesCount = neighborEdges.length;\n  var startIndex;\n\n  var edges = node.getEdgesBetween(parentOfNode);\n\n  // If there are multiple edges, prune them until there remains only one\n  // edge.\n  while (edges.length > 1) {\n    //neighborEdges.remove(edges.remove(0));\n    var temp = edges[0];\n    edges.splice(0, 1);\n    var index = neighborEdges.indexOf(temp);\n    if (index >= 0) {\n      neighborEdges.splice(index, 1);\n    }\n    incEdgesCount--;\n    childCount--;\n  }\n\n  if (parentOfNode != null) {\n    //assert edges.length == 1;\n    startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n  } else {\n    startIndex = 0;\n  }\n\n  var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n\n  for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n    var currentNeighbor = neighborEdges[i].getOtherEnd(node);\n\n    // Don't back traverse to root node in current tree.\n    if (currentNeighbor == parentOfNode) {\n      continue;\n    }\n\n    var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n    var childEndAngle = (childStartAngle + stepAngle) % 360;\n\n    CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n\n    branchCount++;\n  }\n};\n\nCoSELayout.maxDiagonalInTree = function (tree) {\n  var maxDiagonal = Integer.MIN_VALUE;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    var diagonal = node.getDiagonal();\n\n    if (diagonal > maxDiagonal) {\n      maxDiagonal = diagonal;\n    }\n  }\n\n  return maxDiagonal;\n};\n\nCoSELayout.prototype.calcRepulsionRange = function () {\n  // formula is 2 x (level + 1) x idealEdgeLength\n  return 2 * (this.level + 1) * this.idealEdgeLength;\n};\n\n// Tiling methods\n\n// Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\nCoSELayout.prototype.groupZeroDegreeMembers = function () {\n  var self = this;\n  // array of [parent_id x oneDegreeNode_id]\n  var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n  this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n  this.idToDummyNode = {}; // A map of id to dummy node \n\n  var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n  var allNodes = this.graphManager.getAllNodes();\n\n  // Fill zero degree list\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    var parent = node.getParent();\n    // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n    if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n      zeroDegree.push(node);\n    }\n  }\n\n  // Create a map of parent node and its zero degree members\n  for (var i = 0; i < zeroDegree.length; i++) {\n    var node = zeroDegree[i]; // Zero degree node itself\n    var p_id = node.getParent().id; // Parent id\n\n    if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n\n    tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n  }\n\n  // If there are at least two nodes at a level, create a dummy compound for them\n  Object.keys(tempMemberGroups).forEach(function (p_id) {\n    if (tempMemberGroups[p_id].length > 1) {\n      var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n      self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n      var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n\n      // Create a dummy compound with calculated id\n      var dummyCompound = new CoSENode(self.graphManager);\n      dummyCompound.id = dummyCompoundId;\n      dummyCompound.paddingLeft = parent.paddingLeft || 0;\n      dummyCompound.paddingRight = parent.paddingRight || 0;\n      dummyCompound.paddingBottom = parent.paddingBottom || 0;\n      dummyCompound.paddingTop = parent.paddingTop || 0;\n\n      self.idToDummyNode[dummyCompoundId] = dummyCompound;\n\n      var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n      var parentGraph = parent.getChild();\n\n      // Add dummy compound to parent the graph\n      parentGraph.add(dummyCompound);\n\n      // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n      for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n        var node = tempMemberGroups[p_id][i];\n\n        parentGraph.remove(node);\n        dummyParentGraph.add(node);\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.clearCompounds = function () {\n  var childGraphMap = {};\n  var idToNode = {};\n\n  // Get compound ordering by finding the inner one first\n  this.performDFSOnCompounds();\n\n  for (var i = 0; i < this.compoundOrder.length; i++) {\n\n    idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n    childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes());\n\n    // Remove children of compounds\n    this.graphManager.remove(this.compoundOrder[i].getChild());\n    this.compoundOrder[i].child = null;\n  }\n\n  this.graphManager.resetAllNodes();\n\n  // Tile the removed children\n  this.tileCompoundMembers(childGraphMap, idToNode);\n};\n\nCoSELayout.prototype.clearZeroDegreeMembers = function () {\n  var self = this;\n  var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n\n  Object.keys(this.memberGroups).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n    tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    // Set the width and height of the dummy compound as calculated\n    compoundNode.rect.width = tiledZeroDegreePack[id].width;\n    compoundNode.rect.height = tiledZeroDegreePack[id].height;\n  });\n};\n\nCoSELayout.prototype.repopulateCompounds = function () {\n  for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n    var lCompoundNode = this.compoundOrder[i];\n    var id = lCompoundNode.id;\n    var horizontalMargin = lCompoundNode.paddingLeft;\n    var verticalMargin = lCompoundNode.paddingTop;\n\n    this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin);\n  }\n};\n\nCoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n  var self = this;\n  var tiledPack = this.tiledZeroDegreePack;\n\n  Object.keys(tiledPack).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n    var horizontalMargin = compoundNode.paddingLeft;\n    var verticalMargin = compoundNode.paddingTop;\n\n    // Adjust the positions of nodes wrt its compound\n    self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin);\n  });\n};\n\nCoSELayout.prototype.getToBeTiled = function (node) {\n  var id = node.id;\n  //firstly check the previous results\n  if (this.toBeTiled[id] != null) {\n    return this.toBeTiled[id];\n  }\n\n  //only compound nodes are to be tiled\n  var childGraph = node.getChild();\n  if (childGraph == null) {\n    this.toBeTiled[id] = false;\n    return false;\n  }\n\n  var children = childGraph.getNodes(); // Get the children nodes\n\n  //a compound node is not to be tiled if all of its compound children are not to be tiled\n  for (var i = 0; i < children.length; i++) {\n    var theChild = children[i];\n\n    if (this.getNodeDegree(theChild) > 0) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n\n    //pass the children not having the compound structure\n    if (theChild.getChild() == null) {\n      this.toBeTiled[theChild.id] = false;\n      continue;\n    }\n\n    if (!this.getToBeTiled(theChild)) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n  }\n  this.toBeTiled[id] = true;\n  return true;\n};\n\n// Get degree of a node depending of its edges and independent of its children\nCoSELayout.prototype.getNodeDegree = function (node) {\n  var id = node.id;\n  var edges = node.getEdges();\n  var degree = 0;\n\n  // For the edges connected\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    if (edge.getSource().id !== edge.getTarget().id) {\n      degree = degree + 1;\n    }\n  }\n  return degree;\n};\n\n// Get degree of a node with its children\nCoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n  var degree = this.getNodeDegree(node);\n  if (node.getChild() == null) {\n    return degree;\n  }\n  var children = node.getChild().getNodes();\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    degree += this.getNodeDegreeWithChildren(child);\n  }\n  return degree;\n};\n\nCoSELayout.prototype.performDFSOnCompounds = function () {\n  this.compoundOrder = [];\n  this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n};\n\nCoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    if (child.getChild() != null) {\n      this.fillCompexOrderByDFS(child.getChild().getNodes());\n    }\n    if (this.getToBeTiled(child)) {\n      this.compoundOrder.push(child);\n    }\n  }\n};\n\n/**\n* This method places each zero degree member wrt given (x,y) coordinates (top left).\n*/\nCoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin) {\n  x += compoundHorizontalMargin;\n  y += compoundVerticalMargin;\n\n  var left = x;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    var row = organization.rows[i];\n    x = left;\n    var maxHeight = 0;\n\n    for (var j = 0; j < row.length; j++) {\n      var lnode = row[j];\n\n      lnode.rect.x = x; // + lnode.rect.width / 2;\n      lnode.rect.y = y; // + lnode.rect.height / 2;\n\n      x += lnode.rect.width + organization.horizontalPadding;\n\n      if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n    }\n\n    y += maxHeight + organization.verticalPadding;\n  }\n};\n\nCoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n  var self = this;\n  this.tiledMemberPack = [];\n\n  Object.keys(childGraphMap).forEach(function (id) {\n    // Get the compound node\n    var compoundNode = idToNode[id];\n\n    self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    compoundNode.rect.width = self.tiledMemberPack[id].width;\n    compoundNode.rect.height = self.tiledMemberPack[id].height;\n  });\n};\n\nCoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n  var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n  var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n  var organization = {\n    rows: [],\n    rowWidth: [],\n    rowHeight: [],\n    width: 0,\n    height: minWidth, // assume minHeight equals to minWidth\n    verticalPadding: verticalPadding,\n    horizontalPadding: horizontalPadding\n  };\n\n  // Sort the nodes in ascending order of their areas\n  nodes.sort(function (n1, n2) {\n    if (n1.rect.width * n1.rect.height > n2.rect.width * n2.rect.height) return -1;\n    if (n1.rect.width * n1.rect.height < n2.rect.width * n2.rect.height) return 1;\n    return 0;\n  });\n\n  // Create the organization -> tile members\n  for (var i = 0; i < nodes.length; i++) {\n    var lNode = nodes[i];\n\n    if (organization.rows.length == 0) {\n      this.insertNodeToRow(organization, lNode, 0, minWidth);\n    } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n      this.insertNodeToRow(organization, lNode, this.getShortestRowIndex(organization), minWidth);\n    } else {\n      this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n    }\n\n    this.shiftToLastRow(organization);\n  }\n\n  return organization;\n};\n\nCoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n  var minCompoundSize = minWidth;\n\n  // Add new row if needed\n  if (rowIndex == organization.rows.length) {\n    var secondDimension = [];\n\n    organization.rows.push(secondDimension);\n    organization.rowWidth.push(minCompoundSize);\n    organization.rowHeight.push(0);\n  }\n\n  // Update row width\n  var w = organization.rowWidth[rowIndex] + node.rect.width;\n\n  if (organization.rows[rowIndex].length > 0) {\n    w += organization.horizontalPadding;\n  }\n\n  organization.rowWidth[rowIndex] = w;\n  // Update compound width\n  if (organization.width < w) {\n    organization.width = w;\n  }\n\n  // Update height\n  var h = node.rect.height;\n  if (rowIndex > 0) h += organization.verticalPadding;\n\n  var extraHeight = 0;\n  if (h > organization.rowHeight[rowIndex]) {\n    extraHeight = organization.rowHeight[rowIndex];\n    organization.rowHeight[rowIndex] = h;\n    extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n  }\n\n  organization.height += extraHeight;\n\n  // Insert node\n  organization.rows[rowIndex].push(node);\n};\n\n//Scans the rows of an organization and returns the one with the min width\nCoSELayout.prototype.getShortestRowIndex = function (organization) {\n  var r = -1;\n  var min = Number.MAX_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    if (organization.rowWidth[i] < min) {\n      r = i;\n      min = organization.rowWidth[i];\n    }\n  }\n  return r;\n};\n\n//Scans the rows of an organization and returns the one with the max width\nCoSELayout.prototype.getLongestRowIndex = function (organization) {\n  var r = -1;\n  var max = Number.MIN_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n\n    if (organization.rowWidth[i] > max) {\n      r = i;\n      max = organization.rowWidth[i];\n    }\n  }\n\n  return r;\n};\n\n/**\n* This method checks whether adding extra width to the organization violates\n* the aspect ratio(1) or not.\n*/\nCoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n\n  var sri = this.getShortestRowIndex(organization);\n\n  if (sri < 0) {\n    return true;\n  }\n\n  var min = organization.rowWidth[sri];\n\n  if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n\n  var hDiff = 0;\n\n  // Adding to an existing row\n  if (organization.rowHeight[sri] < extraHeight) {\n    if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n  }\n\n  var add_to_row_ratio;\n  if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n    add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n  } else {\n    add_to_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  // Adding a new row for this node\n  hDiff = extraHeight + organization.verticalPadding;\n  var add_new_row_ratio;\n  if (organization.width < extraWidth) {\n    add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n  } else {\n    add_new_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n\n  if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n\n  return add_to_row_ratio < add_new_row_ratio;\n};\n\n//If moving the last node from the longest row and adding it to the last\n//row makes the bounding box smaller, do it.\nCoSELayout.prototype.shiftToLastRow = function (organization) {\n  var longest = this.getLongestRowIndex(organization);\n  var last = organization.rowWidth.length - 1;\n  var row = organization.rows[longest];\n  var node = row[row.length - 1];\n\n  var diff = node.width + organization.horizontalPadding;\n\n  // Check if there is enough space on the last row\n  if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n    // Remove the last element of the longest row\n    row.splice(-1, 1);\n\n    // Push it to the last row\n    organization.rows[last].push(node);\n\n    organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n    organization.rowWidth[last] = organization.rowWidth[last] + diff;\n    organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)];\n\n    // Update heights of the organization\n    var maxHeight = Number.MIN_VALUE;\n    for (var i = 0; i < row.length; i++) {\n      if (row[i].height > maxHeight) maxHeight = row[i].height;\n    }\n    if (longest > 0) maxHeight += organization.verticalPadding;\n\n    var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n\n    organization.rowHeight[longest] = maxHeight;\n    if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n\n    var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n    organization.height += finalTotal - prevTotal;\n\n    this.shiftToLastRow(organization);\n  }\n};\n\nCoSELayout.prototype.tilingPreLayout = function () {\n  if (CoSEConstants.TILE) {\n    // Find zero degree nodes and create a compound for each level\n    this.groupZeroDegreeMembers();\n    // Tile and clear children of each compound\n    this.clearCompounds();\n    // Separately tile and clear zero degree nodes for each level\n    this.clearZeroDegreeMembers();\n  }\n};\n\nCoSELayout.prototype.tilingPostLayout = function () {\n  if (CoSEConstants.TILE) {\n    this.repopulateZeroDegreeMembers();\n    this.repopulateCompounds();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Tree Reduction methods\n// -----------------------------------------------------------------------------\n// Reduce trees \nCoSELayout.prototype.reduceTrees = function () {\n  var prunedNodesAll = [];\n  var containsLeaf = true;\n  var node;\n\n  while (containsLeaf) {\n    var allNodes = this.graphManager.getAllNodes();\n    var prunedNodesInStepTemp = [];\n    containsLeaf = false;\n\n    for (var i = 0; i < allNodes.length; i++) {\n      node = allNodes[i];\n      if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n        prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n        containsLeaf = true;\n      }\n    }\n    if (containsLeaf == true) {\n      var prunedNodesInStep = [];\n      for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n        if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n          prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n          prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n        }\n      }\n      prunedNodesAll.push(prunedNodesInStep);\n      this.graphManager.resetAllNodes();\n      this.graphManager.resetAllEdges();\n    }\n  }\n  this.prunedNodesAll = prunedNodesAll;\n};\n\n// Grow tree one step \nCoSELayout.prototype.growTree = function (prunedNodesAll) {\n  var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n  var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n\n  var nodeData;\n  for (var i = 0; i < prunedNodesInStep.length; i++) {\n    nodeData = prunedNodesInStep[i];\n\n    this.findPlaceforPrunedNode(nodeData);\n\n    nodeData[2].add(nodeData[0]);\n    nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n  }\n\n  prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n  this.graphManager.resetAllNodes();\n  this.graphManager.resetAllEdges();\n};\n\n// Find an appropriate position to replace pruned node, this method can be improved\nCoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n\n  var gridForPrunedNode;\n  var nodeToConnect;\n  var prunedNode = nodeData[0];\n  if (prunedNode == nodeData[1].source) {\n    nodeToConnect = nodeData[1].target;\n  } else {\n    nodeToConnect = nodeData[1].source;\n  }\n  var startGridX = nodeToConnect.startX;\n  var finishGridX = nodeToConnect.finishX;\n  var startGridY = nodeToConnect.startY;\n  var finishGridY = nodeToConnect.finishY;\n\n  var upNodeCount = 0;\n  var downNodeCount = 0;\n  var rightNodeCount = 0;\n  var leftNodeCount = 0;\n  var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n\n  if (startGridY > 0) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n    }\n  }\n  if (finishGridX < this.grid.length - 1) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n    }\n  }\n  if (finishGridY < this.grid[0].length - 1) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n    }\n  }\n  if (startGridX > 0) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n    }\n  }\n  var min = Integer.MAX_VALUE;\n  var minCount;\n  var minIndex;\n  for (var j = 0; j < controlRegions.length; j++) {\n    if (controlRegions[j] < min) {\n      min = controlRegions[j];\n      minCount = 1;\n      minIndex = j;\n    } else if (controlRegions[j] == min) {\n      minCount++;\n    }\n  }\n\n  if (minCount == 3 && min == 0) {\n    if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n      gridForPrunedNode = 1;\n    } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 0;\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 3;\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 2;\n    }\n  } else if (minCount == 2 && min == 0) {\n    var random = Math.floor(Math.random() * 2);\n    if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n      ;\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 1;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else {\n      if (random == 0) {\n        gridForPrunedNode = 2;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    }\n  } else if (minCount == 4 && min == 0) {\n    var random = Math.floor(Math.random() * 4);\n    gridForPrunedNode = random;\n  } else {\n    gridForPrunedNode = minIndex;\n  }\n\n  if (gridForPrunedNode == 0) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n  } else if (gridForPrunedNode == 1) {\n    prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  } else if (gridForPrunedNode == 2) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n  } else {\n    prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  }\n};\n\nmodule.exports = CoSELayout;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar coseBase = {};\n\ncoseBase.layoutBase = __webpack_require__(0);\ncoseBase.CoSEConstants = __webpack_require__(1);\ncoseBase.CoSEEdge = __webpack_require__(2);\ncoseBase.CoSEGraph = __webpack_require__(3);\ncoseBase.CoSEGraphManager = __webpack_require__(4);\ncoseBase.CoSELayout = __webpack_require__(6);\ncoseBase.CoSENode = __webpack_require__(5);\n\nmodule.exports = coseBase;\n\n/***/ })\n/******/ ]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cose-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cose-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCoseBilkent\"] = factory(require(\"cose-base\"));\n\telse\n\t\troot[\"cytoscapeCoseBilkent\"] = factory(root[\"coseBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0).layoutBase.LayoutConstants;\nvar FDLayoutConstants = __webpack_require__(0).layoutBase.FDLayoutConstants;\nvar CoSEConstants = __webpack_require__(0).CoSEConstants;\nvar CoSELayout = __webpack_require__(0).CoSELayout;\nvar CoSENode = __webpack_require__(0).CoSENode;\nvar PointD = __webpack_require__(0).layoutBase.PointD;\nvar DimensionD = __webpack_require__(0).layoutBase.DimensionD;\n\nvar defaults = {\n  // Called on `layoutready`\n  ready: function ready() {},\n  // Called on `layoutstop`\n  stop: function stop() {},\n  // 'draft', 'default' or 'proof\" \n  // - 'draft' fast cooling rate \n  // - 'default' moderate cooling rate \n  // - \"proof\" slow cooling rate\n  quality: 'default',\n  // include labels in node dimensions\n  nodeDimensionsIncludeLabels: false,\n  // number of ticks per frame; higher is faster but more jerky\n  refresh: 30,\n  // Whether to fit the network view after when done\n  fit: true,\n  // Padding on fit\n  padding: 10,\n  // Whether to enable incremental mode\n  randomize: true,\n  // Node repulsion (non overlapping) multiplier\n  nodeRepulsion: 4500,\n  // Ideal edge (non nested) length\n  idealEdgeLength: 50,\n  // Divisor to compute edge forces\n  edgeElasticity: 0.45,\n  // Nesting factor (multiplier) to compute ideal edge length for nested edges\n  nestingFactor: 0.1,\n  // Gravity force (constant)\n  gravity: 0.25,\n  // Maximum number of iterations to perform\n  numIter: 2500,\n  // For enabling tiling\n  tile: true,\n  // Type of layout animation. The option set is {'during', 'end', false}\n  animate: 'end',\n  // Duration for animate:end\n  animationDuration: 500,\n  // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingVertical: 10,\n  // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingHorizontal: 10,\n  // Gravity range (constant) for compounds\n  gravityRangeCompound: 1.5,\n  // Gravity force (constant) for compounds\n  gravityCompound: 1.0,\n  // Gravity range (constant)\n  gravityRange: 3.8,\n  // Initial cooling factor for incremental layout\n  initialEnergyOnIncremental: 0.5\n};\n\nfunction extend(defaults, options) {\n  var obj = {};\n\n  for (var i in defaults) {\n    obj[i] = defaults[i];\n  }\n\n  for (var i in options) {\n    obj[i] = options[i];\n  }\n\n  return obj;\n};\n\nfunction _CoSELayout(_options) {\n  this.options = extend(defaults, _options);\n  getUserOptions(this.options);\n}\n\nvar getUserOptions = function getUserOptions(options) {\n  if (options.nodeRepulsion != null) CoSEConstants.DEFAULT_REPULSION_STRENGTH = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = options.nodeRepulsion;\n  if (options.idealEdgeLength != null) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;\n  if (options.edgeElasticity != null) CoSEConstants.DEFAULT_SPRING_STRENGTH = FDLayoutConstants.DEFAULT_SPRING_STRENGTH = options.edgeElasticity;\n  if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n  if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n  if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n  if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n  if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n  if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n  if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n\n  if (options.quality == 'draft') LayoutConstants.QUALITY = 0;else if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 1;\n\n  CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n  CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n  CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n  CoSEConstants.TILE = options.tile;\n  CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n  CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n};\n\n_CoSELayout.prototype.run = function () {\n  var ready;\n  var frameId;\n  var options = this.options;\n  var idToLNode = this.idToLNode = {};\n  var layout = this.layout = new CoSELayout();\n  var self = this;\n\n  self.stopped = false;\n\n  this.cy = this.options.cy;\n\n  this.cy.trigger({ type: 'layoutstart', layout: this });\n\n  var gm = layout.newGraphManager();\n  this.gm = gm;\n\n  var nodes = this.options.eles.nodes();\n  var edges = this.options.eles.edges();\n\n  this.root = gm.addRoot();\n  this.processChildrenList(this.root, this.getTopMostNodes(nodes), layout);\n\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    var sourceNode = this.idToLNode[edge.data(\"source\")];\n    var targetNode = this.idToLNode[edge.data(\"target\")];\n    if (sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n      var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n      e1.id = edge.id();\n    }\n  }\n\n  var getPositions = function getPositions(ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var theId = ele.data('id');\n    var lNode = self.idToLNode[theId];\n\n    return {\n      x: lNode.getRect().getCenterX(),\n      y: lNode.getRect().getCenterY()\n    };\n  };\n\n  /*\n   * Reposition nodes in iterations animatedly\n   */\n  var iterateAnimated = function iterateAnimated() {\n    // Thigs to perform after nodes are repositioned on screen\n    var afterReposition = function afterReposition() {\n      if (options.fit) {\n        options.cy.fit(options.eles, options.padding);\n      }\n\n      if (!ready) {\n        ready = true;\n        self.cy.one('layoutready', options.ready);\n        self.cy.trigger({ type: 'layoutready', layout: self });\n      }\n    };\n\n    var ticksPerFrame = self.options.refresh;\n    var isDone;\n\n    for (var i = 0; i < ticksPerFrame && !isDone; i++) {\n      isDone = self.stopped || self.layout.tick();\n    }\n\n    // If layout is done\n    if (isDone) {\n      // If the layout is not a sublayout and it is successful perform post layout.\n      if (layout.checkLayoutSuccess() && !layout.isSubLayout) {\n        layout.doPostLayout();\n      }\n\n      // If layout has a tilingPostLayout function property call it.\n      if (layout.tilingPostLayout) {\n        layout.tilingPostLayout();\n      }\n\n      layout.isLayoutFinished = true;\n\n      self.options.eles.nodes().positions(getPositions);\n\n      afterReposition();\n\n      // trigger layoutstop when the layout stops (e.g. finishes)\n      self.cy.one('layoutstop', self.options.stop);\n      self.cy.trigger({ type: 'layoutstop', layout: self });\n\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n\n      ready = false;\n      return;\n    }\n\n    var animationData = self.layout.getPositionsData(); // Get positions of layout nodes note that all nodes may not be layout nodes because of tiling\n\n    // Position nodes, for the nodes whose id does not included in data (because they are removed from their parents and included in dummy compounds)\n    // use position of their ancestors or dummy ancestors\n    options.eles.nodes().positions(function (ele, i) {\n      if (typeof ele === \"number\") {\n        ele = i;\n      }\n      // If ele is a compound node, then its position will be defined by its children\n      if (!ele.isParent()) {\n        var theId = ele.id();\n        var pNode = animationData[theId];\n        var temp = ele;\n        // If pNode is undefined search until finding position data of its first ancestor (It may be dummy as well)\n        while (pNode == null) {\n          pNode = animationData[temp.data('parent')] || animationData['DummyCompound_' + temp.data('parent')];\n          animationData[theId] = pNode;\n          temp = temp.parent()[0];\n          if (temp == undefined) {\n            break;\n          }\n        }\n        if (pNode != null) {\n          return {\n            x: pNode.x,\n            y: pNode.y\n          };\n        } else {\n          return {\n            x: ele.position('x'),\n            y: ele.position('y')\n          };\n        }\n      }\n    });\n\n    afterReposition();\n\n    frameId = requestAnimationFrame(iterateAnimated);\n  };\n\n  /*\n  * Listen 'layoutstarted' event and start animated iteration if animate option is 'during'\n  */\n  layout.addListener('layoutstarted', function () {\n    if (self.options.animate === 'during') {\n      frameId = requestAnimationFrame(iterateAnimated);\n    }\n  });\n\n  layout.runLayout(); // Run cose layout\n\n  /*\n   * If animate option is not 'during' ('end' or false) perform these here (If it is 'during' similar things are already performed)\n   */\n  if (this.options.animate !== \"during\") {\n    self.options.eles.nodes().not(\":parent\").layoutPositions(self, self.options, getPositions); // Use layout positions to reposition the nodes it considers the options parameter\n    ready = false;\n  }\n\n  return this; // chaining\n};\n\n//Get the top most ones of a list of nodes\n_CoSELayout.prototype.getTopMostNodes = function (nodes) {\n  var nodesMap = {};\n  for (var i = 0; i < nodes.length; i++) {\n    nodesMap[nodes[i].id()] = true;\n  }\n  var roots = nodes.filter(function (ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var parent = ele.parent()[0];\n    while (parent != null) {\n      if (nodesMap[parent.id()]) {\n        return false;\n      }\n      parent = parent.parent()[0];\n    }\n    return true;\n  });\n\n  return roots;\n};\n\n_CoSELayout.prototype.processChildrenList = function (parent, children, layout) {\n  var size = children.length;\n  for (var i = 0; i < size; i++) {\n    var theChild = children[i];\n    var children_of_children = theChild.children();\n    var theNode;\n\n    var dimensions = theChild.layoutDimensions({\n      nodeDimensionsIncludeLabels: this.options.nodeDimensionsIncludeLabels\n    });\n\n    if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n      theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n    } else {\n      theNode = parent.add(new CoSENode(this.graphManager));\n    }\n    // Attach id to the layout node\n    theNode.id = theChild.data(\"id\");\n    // Attach the paddings of cy node to layout node\n    theNode.paddingLeft = parseInt(theChild.css('padding'));\n    theNode.paddingTop = parseInt(theChild.css('padding'));\n    theNode.paddingRight = parseInt(theChild.css('padding'));\n    theNode.paddingBottom = parseInt(theChild.css('padding'));\n\n    //Attach the label properties to compound if labels will be included in node dimensions  \n    if (this.options.nodeDimensionsIncludeLabels) {\n      if (theChild.isParent()) {\n        var labelWidth = theChild.boundingBox({ includeLabels: true, includeNodes: false }).w;\n        var labelHeight = theChild.boundingBox({ includeLabels: true, includeNodes: false }).h;\n        var labelPos = theChild.css(\"text-halign\");\n        theNode.labelWidth = labelWidth;\n        theNode.labelHeight = labelHeight;\n        theNode.labelPos = labelPos;\n      }\n    }\n\n    // Map the layout node\n    this.idToLNode[theChild.data(\"id\")] = theNode;\n\n    if (isNaN(theNode.rect.x)) {\n      theNode.rect.x = 0;\n    }\n\n    if (isNaN(theNode.rect.y)) {\n      theNode.rect.y = 0;\n    }\n\n    if (children_of_children != null && children_of_children.length > 0) {\n      var theNewGraph;\n      theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n      this.processChildrenList(theNewGraph, children_of_children, layout);\n    }\n  }\n};\n\n/**\n * @brief : called on continuous layouts to stop them before they finish\n */\n_CoSELayout.prototype.stop = function () {\n  this.stopped = true;\n\n  return this; // chaining\n};\n\nvar register = function register(cytoscape) {\n  //  var Layout = getLayout( cytoscape );\n\n  cytoscape('layout', 'cose-bilkent', _CoSELayout);\n};\n\n// auto reg for globals\nif (typeof cytoscape !== 'undefined') {\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ })\n/******/ ]);\n});","import {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/rendering-util/layout-algorithms/cose-bilkent/cytoscape-setup.ts\nimport cytoscape from \"cytoscape\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { select } from \"d3\";\ncytoscape.use(coseBilkent);\nfunction addNodes(nodes, cy) {\n  nodes.forEach((node) => {\n    const nodeData = {\n      id: node.id,\n      labelText: node.label,\n      height: node.height,\n      width: node.width,\n      padding: node.padding ?? 0\n    };\n    Object.keys(node).forEach((key) => {\n      if (![\"id\", \"label\", \"height\", \"width\", \"padding\", \"x\", \"y\"].includes(key)) {\n        nodeData[key] = node[key];\n      }\n    });\n    cy.add({\n      group: \"nodes\",\n      data: nodeData,\n      position: {\n        x: node.x ?? 0,\n        y: node.y ?? 0\n      }\n    });\n  });\n}\n__name(addNodes, \"addNodes\");\nfunction addEdges(edges, cy) {\n  edges.forEach((edge) => {\n    const edgeData = {\n      id: edge.id,\n      source: edge.start,\n      target: edge.end\n    };\n    Object.keys(edge).forEach((key) => {\n      if (![\"id\", \"start\", \"end\"].includes(key)) {\n        edgeData[key] = edge[key];\n      }\n    });\n    cy.add({\n      group: \"edges\",\n      data: edgeData\n    });\n  });\n}\n__name(addEdges, \"addEdges\");\nfunction createCytoscapeInstance(data) {\n  return new Promise((resolve) => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [\n        {\n          selector: \"edge\",\n          style: {\n            \"curve-style\": \"bezier\"\n          }\n        }\n      ]\n    });\n    renderEl.remove();\n    addNodes(data.nodes, cy);\n    addEdges(data.edges, cy);\n    cy.nodes().forEach(function(n) {\n      n.layoutDimensions = () => {\n        const nodeData = n.data();\n        return { w: nodeData.width, h: nodeData.height };\n      };\n    });\n    const layoutConfig = {\n      name: \"cose-bilkent\",\n      // @ts-ignore Types for cose-bilkent are not correct?\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false\n    };\n    cy.layout(layoutConfig).run();\n    cy.ready((e) => {\n      log.info(\"Cytoscape ready\", e);\n      resolve(cy);\n    });\n  });\n}\n__name(createCytoscapeInstance, \"createCytoscapeInstance\");\nfunction extractPositionedNodes(cy) {\n  return cy.nodes().map((node) => {\n    const data = node.data();\n    const position = node.position();\n    const positionedNode = {\n      id: data.id,\n      x: position.x,\n      y: position.y\n    };\n    Object.keys(data).forEach((key) => {\n      if (key !== \"id\") {\n        positionedNode[key] = data[key];\n      }\n    });\n    return positionedNode;\n  });\n}\n__name(extractPositionedNodes, \"extractPositionedNodes\");\nfunction extractPositionedEdges(cy) {\n  return cy.edges().map((edge) => {\n    const data = edge.data();\n    const rscratch = edge._private.rscratch;\n    const positionedEdge = {\n      id: data.id,\n      source: data.source,\n      target: data.target,\n      startX: rscratch.startX,\n      startY: rscratch.startY,\n      midX: rscratch.midX,\n      midY: rscratch.midY,\n      endX: rscratch.endX,\n      endY: rscratch.endY\n    };\n    Object.keys(data).forEach((key) => {\n      if (![\"id\", \"source\", \"target\"].includes(key)) {\n        positionedEdge[key] = data[key];\n      }\n    });\n    return positionedEdge;\n  });\n}\n__name(extractPositionedEdges, \"extractPositionedEdges\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/layout.ts\nasync function executeCoseBilkentLayout(data, _config) {\n  log.debug(\"Starting cose-bilkent layout algorithm\");\n  try {\n    validateLayoutData(data);\n    const cy = await createCytoscapeInstance(data);\n    const positionedNodes = extractPositionedNodes(cy);\n    const positionedEdges = extractPositionedEdges(cy);\n    log.debug(`Layout completed: ${positionedNodes.length} nodes, ${positionedEdges.length} edges`);\n    return {\n      nodes: positionedNodes,\n      edges: positionedEdges\n    };\n  } catch (error) {\n    log.error(\"Error in cose-bilkent layout algorithm:\", error);\n    throw error;\n  }\n}\n__name(executeCoseBilkentLayout, \"executeCoseBilkentLayout\");\nfunction validateLayoutData(data) {\n  if (!data) {\n    throw new Error(\"Layout data is required\");\n  }\n  if (!data.config) {\n    throw new Error(\"Configuration is required in layout data\");\n  }\n  if (!data.rootNode) {\n    throw new Error(\"Root node is required\");\n  }\n  if (!data.nodes || !Array.isArray(data.nodes)) {\n    throw new Error(\"No nodes found in layout data\");\n  }\n  if (!Array.isArray(data.edges)) {\n    throw new Error(\"Edges array is required in layout data\");\n  }\n  return true;\n}\n__name(validateLayoutData, \"validateLayoutData\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/render.ts\nvar render = /* @__PURE__ */ __name(async (data4Layout, svg, {\n  insertCluster,\n  insertEdge,\n  insertEdgeLabel,\n  insertMarkers,\n  insertNode,\n  log: log2,\n  positionEdgeLabel\n}, { algorithm: _algorithm }) => {\n  const nodeDb = {};\n  const clusterDb = {};\n  const element = svg.select(\"g\");\n  insertMarkers(element, data4Layout.markers, data4Layout.type, data4Layout.diagramId);\n  const subGraphsEl = element.insert(\"g\").attr(\"class\", \"subgraphs\");\n  const edgePaths = element.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = element.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = element.insert(\"g\").attr(\"class\", \"nodes\");\n  log2.debug(\"Inserting nodes into DOM for dimension calculation\");\n  await Promise.all(\n    data4Layout.nodes.map(async (node) => {\n      if (node.isGroup) {\n        const clusterNode = { ...node };\n        clusterDb[node.id] = clusterNode;\n        nodeDb[node.id] = clusterNode;\n        await insertCluster(subGraphsEl, node);\n      } else {\n        const nodeWithPosition = { ...node };\n        nodeDb[node.id] = nodeWithPosition;\n        const nodeEl = await insertNode(nodes, node, {\n          config: data4Layout.config,\n          dir: data4Layout.direction || \"TB\"\n        });\n        const boundingBox = nodeEl.node().getBBox();\n        nodeWithPosition.width = boundingBox.width;\n        nodeWithPosition.height = boundingBox.height;\n        nodeWithPosition.domId = nodeEl;\n        log2.debug(`Node ${node.id} dimensions: ${boundingBox.width}x${boundingBox.height}`);\n      }\n    })\n  );\n  log2.debug(\"Running cose-bilkent layout algorithm\");\n  const updatedLayoutData = {\n    ...data4Layout,\n    nodes: data4Layout.nodes.map((node) => {\n      const nodeWithDimensions = nodeDb[node.id];\n      return {\n        ...node,\n        width: nodeWithDimensions.width,\n        height: nodeWithDimensions.height\n      };\n    })\n  };\n  const layoutResult = await executeCoseBilkentLayout(updatedLayoutData, data4Layout.config);\n  log2.debug(\"Positioning nodes based on layout results\");\n  layoutResult.nodes.forEach((positionedNode) => {\n    const node = nodeDb[positionedNode.id];\n    if (node?.domId) {\n      node.domId.attr(\n        \"transform\",\n        `translate(${positionedNode.x}, ${positionedNode.y})`\n      );\n      node.x = positionedNode.x;\n      node.y = positionedNode.y;\n      log2.debug(`Positioned node ${node.id} at center (${positionedNode.x}, ${positionedNode.y})`);\n    }\n  });\n  layoutResult.edges.forEach((positionedEdge) => {\n    const edge = data4Layout.edges.find((e) => e.id === positionedEdge.id);\n    if (edge) {\n      edge.points = [\n        { x: positionedEdge.startX, y: positionedEdge.startY },\n        { x: positionedEdge.midX, y: positionedEdge.midY },\n        { x: positionedEdge.endX, y: positionedEdge.endY }\n      ];\n    }\n  });\n  log2.debug(\"Inserting and positioning edges\");\n  await Promise.all(\n    data4Layout.edges.map(async (edge) => {\n      const _edgeLabel = await insertEdgeLabel(edgeLabels, edge);\n      const startNode = nodeDb[edge.start ?? \"\"];\n      const endNode = nodeDb[edge.end ?? \"\"];\n      if (startNode && endNode) {\n        const positionedEdge = layoutResult.edges.find((e) => e.id === edge.id);\n        if (positionedEdge) {\n          log2.debug(\"APA01 positionedEdge\", positionedEdge);\n          const edgeWithPath = { ...edge };\n          const paths = insertEdge(\n            edgePaths,\n            edgeWithPath,\n            clusterDb,\n            data4Layout.type,\n            startNode,\n            endNode,\n            data4Layout.diagramId\n          );\n          positionEdgeLabel(edgeWithPath, paths);\n        } else {\n          const edgeWithPath = {\n            ...edge,\n            points: [\n              { x: startNode.x || 0, y: startNode.y || 0 },\n              { x: endNode.x || 0, y: endNode.y || 0 }\n            ]\n          };\n          const paths = insertEdge(\n            edgePaths,\n            edgeWithPath,\n            clusterDb,\n            data4Layout.type,\n            startNode,\n            endNode,\n            data4Layout.diagramId\n          );\n          positionEdgeLabel(edgeWithPath, paths);\n        }\n      }\n    })\n  );\n  log2.debug(\"Cose-bilkent rendering completed\");\n}, \"render\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/index.ts\nvar render2 = render;\nexport {\n  render2 as render\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"layoutBase\"] = factory();\n\telse\n\t\troot[\"layoutBase\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 26);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LayoutConstants() {}\n\n/**\r\n * Layout Quality: 0:draft, 1:default, 2:proof\r\n */\nLayoutConstants.QUALITY = 1;\n\n/**\r\n * Default parameters\r\n */\nLayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\nLayoutConstants.DEFAULT_INCREMENTAL = false;\nLayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\nLayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\nLayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\nLayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false;\n\n// -----------------------------------------------------------------------------\n// Section: General other constants\n// -----------------------------------------------------------------------------\n/*\r\n * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n * assume margins on all four sides to be uniform.\r\n */\nLayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n\n/*\r\n * Whether to consider labels in node dimensions or not\r\n */\nLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_SIZE = 40;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n\n/*\r\n * Empty compound node size. When a compound node is empty, its both\r\n * dimensions should be of this value.\r\n */\nLayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n\n/*\r\n * Minimum length that an edge should take during layout\r\n */\nLayoutConstants.MIN_EDGE_LENGTH = 1;\n\n/*\r\n * World boundaries that layout operates on\r\n */\nLayoutConstants.WORLD_BOUNDARY = 1000000;\n\n/*\r\n * World boundaries that random positioning can be performed with\r\n */\nLayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n\n/*\r\n * Coordinates of the world center\r\n */\nLayoutConstants.WORLD_CENTER_X = 1200;\nLayoutConstants.WORLD_CENTER_Y = 900;\n\nmodule.exports = LayoutConstants;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction LEdge(source, target, vEdge) {\n  LGraphObject.call(this, vEdge);\n\n  this.isOverlapingSourceAndTarget = false;\n  this.vGraphObject = vEdge;\n  this.bendpoints = [];\n  this.source = source;\n  this.target = target;\n}\n\nLEdge.prototype = Object.create(LGraphObject.prototype);\n\nfor (var prop in LGraphObject) {\n  LEdge[prop] = LGraphObject[prop];\n}\n\nLEdge.prototype.getSource = function () {\n  return this.source;\n};\n\nLEdge.prototype.getTarget = function () {\n  return this.target;\n};\n\nLEdge.prototype.isInterGraph = function () {\n  return this.isInterGraph;\n};\n\nLEdge.prototype.getLength = function () {\n  return this.length;\n};\n\nLEdge.prototype.isOverlapingSourceAndTarget = function () {\n  return this.isOverlapingSourceAndTarget;\n};\n\nLEdge.prototype.getBendpoints = function () {\n  return this.bendpoints;\n};\n\nLEdge.prototype.getLca = function () {\n  return this.lca;\n};\n\nLEdge.prototype.getSourceInLca = function () {\n  return this.sourceInLca;\n};\n\nLEdge.prototype.getTargetInLca = function () {\n  return this.targetInLca;\n};\n\nLEdge.prototype.getOtherEnd = function (node) {\n  if (this.source === node) {\n    return this.target;\n  } else if (this.target === node) {\n    return this.source;\n  } else {\n    throw \"Node is not incident with this edge\";\n  }\n};\n\nLEdge.prototype.getOtherEndInGraph = function (node, graph) {\n  var otherEnd = this.getOtherEnd(node);\n  var root = graph.getGraphManager().getRoot();\n\n  while (true) {\n    if (otherEnd.getOwner() == graph) {\n      return otherEnd;\n    }\n\n    if (otherEnd.getOwner() == root) {\n      break;\n    }\n\n    otherEnd = otherEnd.getOwner().getParent();\n  }\n\n  return null;\n};\n\nLEdge.prototype.updateLength = function () {\n  var clipPointCoordinates = new Array(4);\n\n  this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n\n  if (!this.isOverlapingSourceAndTarget) {\n    this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n    this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n\n    if (Math.abs(this.lengthX) < 1.0) {\n      this.lengthX = IMath.sign(this.lengthX);\n    }\n\n    if (Math.abs(this.lengthY) < 1.0) {\n      this.lengthY = IMath.sign(this.lengthY);\n    }\n\n    this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n  }\n};\n\nLEdge.prototype.updateLengthSimple = function () {\n  this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n  this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n\n  if (Math.abs(this.lengthX) < 1.0) {\n    this.lengthX = IMath.sign(this.lengthX);\n  }\n\n  if (Math.abs(this.lengthY) < 1.0) {\n    this.lengthY = IMath.sign(this.lengthY);\n  }\n\n  this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n};\n\nmodule.exports = LEdge;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LGraphObject(vGraphObject) {\n  this.vGraphObject = vGraphObject;\n}\n\nmodule.exports = LGraphObject;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar RectangleD = __webpack_require__(13);\nvar LayoutConstants = __webpack_require__(0);\nvar RandomSeed = __webpack_require__(16);\nvar PointD = __webpack_require__(4);\n\nfunction LNode(gm, loc, size, vNode) {\n  //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n  if (size == null && vNode == null) {\n    vNode = loc;\n  }\n\n  LGraphObject.call(this, vNode);\n\n  //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n  if (gm.graphManager != null) gm = gm.graphManager;\n\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.inclusionTreeDepth = Integer.MAX_VALUE;\n  this.vGraphObject = vNode;\n  this.edges = [];\n  this.graphManager = gm;\n\n  if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n}\n\nLNode.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LNode[prop] = LGraphObject[prop];\n}\n\nLNode.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLNode.prototype.getChild = function () {\n  return this.child;\n};\n\nLNode.prototype.getOwner = function () {\n  //  if (this.owner != null) {\n  //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n  //      throw \"assert failed\";\n  //    }\n  //  }\n\n  return this.owner;\n};\n\nLNode.prototype.getWidth = function () {\n  return this.rect.width;\n};\n\nLNode.prototype.setWidth = function (width) {\n  this.rect.width = width;\n};\n\nLNode.prototype.getHeight = function () {\n  return this.rect.height;\n};\n\nLNode.prototype.setHeight = function (height) {\n  this.rect.height = height;\n};\n\nLNode.prototype.getCenterX = function () {\n  return this.rect.x + this.rect.width / 2;\n};\n\nLNode.prototype.getCenterY = function () {\n  return this.rect.y + this.rect.height / 2;\n};\n\nLNode.prototype.getCenter = function () {\n  return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n};\n\nLNode.prototype.getLocation = function () {\n  return new PointD(this.rect.x, this.rect.y);\n};\n\nLNode.prototype.getRect = function () {\n  return this.rect;\n};\n\nLNode.prototype.getDiagonal = function () {\n  return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n};\n\n/**\n * This method returns half the diagonal length of this node.\n */\nLNode.prototype.getHalfTheDiagonal = function () {\n  return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n};\n\nLNode.prototype.setRect = function (upperLeft, dimension) {\n  this.rect.x = upperLeft.x;\n  this.rect.y = upperLeft.y;\n  this.rect.width = dimension.width;\n  this.rect.height = dimension.height;\n};\n\nLNode.prototype.setCenter = function (cx, cy) {\n  this.rect.x = cx - this.rect.width / 2;\n  this.rect.y = cy - this.rect.height / 2;\n};\n\nLNode.prototype.setLocation = function (x, y) {\n  this.rect.x = x;\n  this.rect.y = y;\n};\n\nLNode.prototype.moveBy = function (dx, dy) {\n  this.rect.x += dx;\n  this.rect.y += dy;\n};\n\nLNode.prototype.getEdgeListToNode = function (to) {\n  var edgeList = [];\n  var edge;\n  var self = this;\n\n  self.edges.forEach(function (edge) {\n\n    if (edge.target == to) {\n      if (edge.source != self) throw \"Incorrect edge source!\";\n\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getEdgesBetween = function (other) {\n  var edgeList = [];\n  var edge;\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n\n    if (edge.target == other || edge.source == other) {\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getNeighborsList = function () {\n  var neighbors = new Set();\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (edge.source == self) {\n      neighbors.add(edge.target);\n    } else {\n      if (edge.target != self) {\n        throw \"Incorrect incidency!\";\n      }\n\n      neighbors.add(edge.source);\n    }\n  });\n\n  return neighbors;\n};\n\nLNode.prototype.withChildren = function () {\n  var withNeighborsList = new Set();\n  var childNode;\n  var children;\n\n  withNeighborsList.add(this);\n\n  if (this.child != null) {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n      children = childNode.withChildren();\n      children.forEach(function (node) {\n        withNeighborsList.add(node);\n      });\n    }\n  }\n\n  return withNeighborsList;\n};\n\nLNode.prototype.getNoOfChildren = function () {\n  var noOfChildren = 0;\n  var childNode;\n\n  if (this.child == null) {\n    noOfChildren = 1;\n  } else {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n\n      noOfChildren += childNode.getNoOfChildren();\n    }\n  }\n\n  if (noOfChildren == 0) {\n    noOfChildren = 1;\n  }\n  return noOfChildren;\n};\n\nLNode.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLNode.prototype.calcEstimatedSize = function () {\n  if (this.child == null) {\n    return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n  } else {\n    this.estimatedSize = this.child.calcEstimatedSize();\n    this.rect.width = this.estimatedSize;\n    this.rect.height = this.estimatedSize;\n\n    return this.estimatedSize;\n  }\n};\n\nLNode.prototype.scatter = function () {\n  var randomCenterX;\n  var randomCenterY;\n\n  var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n\n  var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n\n  this.rect.x = randomCenterX;\n  this.rect.y = randomCenterY;\n};\n\nLNode.prototype.updateBounds = function () {\n  if (this.getChild() == null) {\n    throw \"assert failed\";\n  }\n  if (this.getChild().getNodes().length != 0) {\n    // wrap the children nodes by re-arranging the boundaries\n    var childGraph = this.getChild();\n    childGraph.updateBounds(true);\n\n    this.rect.x = childGraph.getLeft();\n    this.rect.y = childGraph.getTop();\n\n    this.setWidth(childGraph.getRight() - childGraph.getLeft());\n    this.setHeight(childGraph.getBottom() - childGraph.getTop());\n\n    // Update compound bounds considering its label properties    \n    if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = childGraph.getRight() - childGraph.getLeft();\n      var height = childGraph.getBottom() - childGraph.getTop();\n\n      if (this.labelWidth > width) {\n        this.rect.x -= (this.labelWidth - width) / 2;\n        this.setWidth(this.labelWidth);\n      }\n\n      if (this.labelHeight > height) {\n        if (this.labelPos == \"center\") {\n          this.rect.y -= (this.labelHeight - height) / 2;\n        } else if (this.labelPos == \"top\") {\n          this.rect.y -= this.labelHeight - height;\n        }\n        this.setHeight(this.labelHeight);\n      }\n    }\n  }\n};\n\nLNode.prototype.getInclusionTreeDepth = function () {\n  if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.inclusionTreeDepth;\n};\n\nLNode.prototype.transform = function (trans) {\n  var left = this.rect.x;\n\n  if (left > LayoutConstants.WORLD_BOUNDARY) {\n    left = LayoutConstants.WORLD_BOUNDARY;\n  } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n    left = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var top = this.rect.y;\n\n  if (top > LayoutConstants.WORLD_BOUNDARY) {\n    top = LayoutConstants.WORLD_BOUNDARY;\n  } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n    top = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var leftTop = new PointD(left, top);\n  var vLeftTop = trans.inverseTransformPoint(leftTop);\n\n  this.setLocation(vLeftTop.x, vLeftTop.y);\n};\n\nLNode.prototype.getLeft = function () {\n  return this.rect.x;\n};\n\nLNode.prototype.getRight = function () {\n  return this.rect.x + this.rect.width;\n};\n\nLNode.prototype.getTop = function () {\n  return this.rect.y;\n};\n\nLNode.prototype.getBottom = function () {\n  return this.rect.y + this.rect.height;\n};\n\nLNode.prototype.getParent = function () {\n  if (this.owner == null) {\n    return null;\n  }\n\n  return this.owner.getParent();\n};\n\nmodule.exports = LNode;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction PointD(x, y) {\n  if (x == null && y == null) {\n    this.x = 0;\n    this.y = 0;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nPointD.prototype.getX = function () {\n  return this.x;\n};\n\nPointD.prototype.getY = function () {\n  return this.y;\n};\n\nPointD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nPointD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nPointD.prototype.getDifference = function (pt) {\n  return new DimensionD(this.x - pt.x, this.y - pt.y);\n};\n\nPointD.prototype.getCopy = function () {\n  return new PointD(this.x, this.y);\n};\n\nPointD.prototype.translate = function (dim) {\n  this.x += dim.width;\n  this.y += dim.height;\n  return this;\n};\n\nmodule.exports = PointD;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar RectangleD = __webpack_require__(13);\nvar Point = __webpack_require__(12);\nvar LinkedList = __webpack_require__(11);\n\nfunction LGraph(parent, obj2, vGraph) {\n  LGraphObject.call(this, vGraph);\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n  this.edges = [];\n  this.nodes = [];\n  this.isConnected = false;\n  this.parent = parent;\n\n  if (obj2 != null && obj2 instanceof LGraphManager) {\n    this.graphManager = obj2;\n  } else if (obj2 != null && obj2 instanceof Layout) {\n    this.graphManager = obj2.graphManager;\n  }\n}\n\nLGraph.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LGraph[prop] = LGraphObject[prop];\n}\n\nLGraph.prototype.getNodes = function () {\n  return this.nodes;\n};\n\nLGraph.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLGraph.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLGraph.prototype.getParent = function () {\n  return this.parent;\n};\n\nLGraph.prototype.getLeft = function () {\n  return this.left;\n};\n\nLGraph.prototype.getRight = function () {\n  return this.right;\n};\n\nLGraph.prototype.getTop = function () {\n  return this.top;\n};\n\nLGraph.prototype.getBottom = function () {\n  return this.bottom;\n};\n\nLGraph.prototype.isConnected = function () {\n  return this.isConnected;\n};\n\nLGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n  if (sourceNode == null && targetNode == null) {\n    var newNode = obj1;\n    if (this.graphManager == null) {\n      throw \"Graph has no graph mgr!\";\n    }\n    if (this.getNodes().indexOf(newNode) > -1) {\n      throw \"Node already in graph!\";\n    }\n    newNode.owner = this;\n    this.getNodes().push(newNode);\n\n    return newNode;\n  } else {\n    var newEdge = obj1;\n    if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n      throw \"Source or target not in graph!\";\n    }\n\n    if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n      throw \"Both owners must be this graph!\";\n    }\n\n    if (sourceNode.owner != targetNode.owner) {\n      return null;\n    }\n\n    // set source and target\n    newEdge.source = sourceNode;\n    newEdge.target = targetNode;\n\n    // set as intra-graph edge\n    newEdge.isInterGraph = false;\n\n    // add to graph edge list\n    this.getEdges().push(newEdge);\n\n    // add to incidency lists\n    sourceNode.edges.push(newEdge);\n\n    if (targetNode != sourceNode) {\n      targetNode.edges.push(newEdge);\n    }\n\n    return newEdge;\n  }\n};\n\nLGraph.prototype.remove = function (obj) {\n  var node = obj;\n  if (obj instanceof LNode) {\n    if (node == null) {\n      throw \"Node is null!\";\n    }\n    if (!(node.owner != null && node.owner == this)) {\n      throw \"Owner graph is invalid!\";\n    }\n    if (this.graphManager == null) {\n      throw \"Owner graph manager is invalid!\";\n    }\n    // remove incident edges first (make a copy to do it safely)\n    var edgesToBeRemoved = node.edges.slice();\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n\n      if (edge.isInterGraph) {\n        this.graphManager.remove(edge);\n      } else {\n        edge.source.owner.remove(edge);\n      }\n    }\n\n    // now the node itself\n    var index = this.nodes.indexOf(node);\n    if (index == -1) {\n      throw \"Node not in owner node list!\";\n    }\n\n    this.nodes.splice(index, 1);\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n    if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n      throw \"Source and/or target owner is invalid!\";\n    }\n\n    var sourceIndex = edge.source.edges.indexOf(edge);\n    var targetIndex = edge.target.edges.indexOf(edge);\n    if (!(sourceIndex > -1 && targetIndex > -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    edge.source.edges.splice(sourceIndex, 1);\n\n    if (edge.target != edge.source) {\n      edge.target.edges.splice(targetIndex, 1);\n    }\n\n    var index = edge.source.owner.getEdges().indexOf(edge);\n    if (index == -1) {\n      throw \"Not in owner's edge list!\";\n    }\n\n    edge.source.owner.getEdges().splice(index, 1);\n  }\n};\n\nLGraph.prototype.updateLeftTop = function () {\n  var top = Integer.MAX_VALUE;\n  var left = Integer.MAX_VALUE;\n  var nodeTop;\n  var nodeLeft;\n  var margin;\n\n  var nodes = this.getNodes();\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeTop = lNode.getTop();\n    nodeLeft = lNode.getLeft();\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n  }\n\n  // Do we have any nodes in this graph?\n  if (top == Integer.MAX_VALUE) {\n    return null;\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = left - margin;\n  this.top = top - margin;\n\n  // Apply the margins and return the result\n  return new Point(this.left, this.top);\n};\n\nLGraph.prototype.updateBounds = function (recursive) {\n  // calculate bounds\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n  var margin;\n\n  var nodes = this.nodes;\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n\n    if (recursive && lNode.child != null) {\n      lNode.updateBounds();\n    }\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n  if (left == Integer.MAX_VALUE) {\n    this.left = this.parent.getLeft();\n    this.right = this.parent.getRight();\n    this.top = this.parent.getTop();\n    this.bottom = this.parent.getBottom();\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = boundingRect.x - margin;\n  this.right = boundingRect.x + boundingRect.width + margin;\n  this.top = boundingRect.y - margin;\n  this.bottom = boundingRect.y + boundingRect.height + margin;\n};\n\nLGraph.calculateBounds = function (nodes) {\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n\n  return boundingRect;\n};\n\nLGraph.prototype.getInclusionTreeDepth = function () {\n  if (this == this.graphManager.getRoot()) {\n    return 1;\n  } else {\n    return this.parent.getInclusionTreeDepth();\n  }\n};\n\nLGraph.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLGraph.prototype.calcEstimatedSize = function () {\n  var size = 0;\n  var nodes = this.nodes;\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    size += lNode.calcEstimatedSize();\n  }\n\n  if (size == 0) {\n    this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n  } else {\n    this.estimatedSize = size / Math.sqrt(this.nodes.length);\n  }\n\n  return this.estimatedSize;\n};\n\nLGraph.prototype.updateConnected = function () {\n  var self = this;\n  if (this.nodes.length == 0) {\n    this.isConnected = true;\n    return;\n  }\n\n  var queue = new LinkedList();\n  var visited = new Set();\n  var currentNode = this.nodes[0];\n  var neighborEdges;\n  var currentNeighbor;\n  var childrenOfNode = currentNode.withChildren();\n  childrenOfNode.forEach(function (node) {\n    queue.push(node);\n    visited.add(node);\n  });\n\n  while (queue.length !== 0) {\n    currentNode = queue.shift();\n\n    // Traverse all neighbors of this node\n    neighborEdges = currentNode.getEdges();\n    var size = neighborEdges.length;\n    for (var i = 0; i < size; i++) {\n      var neighborEdge = neighborEdges[i];\n      currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this);\n\n      // Add unvisited neighbors to the list to visit\n      if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n        var childrenOfNeighbor = currentNeighbor.withChildren();\n\n        childrenOfNeighbor.forEach(function (node) {\n          queue.push(node);\n          visited.add(node);\n        });\n      }\n    }\n  }\n\n  this.isConnected = false;\n\n  if (visited.size >= this.nodes.length) {\n    var noOfVisitedInThisGraph = 0;\n\n    visited.forEach(function (visitedNode) {\n      if (visitedNode.owner == self) {\n        noOfVisitedInThisGraph++;\n      }\n    });\n\n    if (noOfVisitedInThisGraph == this.nodes.length) {\n      this.isConnected = true;\n    }\n  }\n};\n\nmodule.exports = LGraph;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph;\nvar LEdge = __webpack_require__(1);\n\nfunction LGraphManager(layout) {\n  LGraph = __webpack_require__(5); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n  this.layout = layout;\n\n  this.graphs = [];\n  this.edges = [];\n}\n\nLGraphManager.prototype.addRoot = function () {\n  var ngraph = this.layout.newGraph();\n  var nnode = this.layout.newNode(null);\n  var root = this.add(ngraph, nnode);\n  this.setRootGraph(root);\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n  //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n  if (newEdge == null && sourceNode == null && targetNode == null) {\n    if (newGraph == null) {\n      throw \"Graph is null!\";\n    }\n    if (parentNode == null) {\n      throw \"Parent node is null!\";\n    }\n    if (this.graphs.indexOf(newGraph) > -1) {\n      throw \"Graph already in this graph mgr!\";\n    }\n\n    this.graphs.push(newGraph);\n\n    if (newGraph.parent != null) {\n      throw \"Already has a parent!\";\n    }\n    if (parentNode.child != null) {\n      throw \"Already has a child!\";\n    }\n\n    newGraph.parent = parentNode;\n    parentNode.child = newGraph;\n\n    return newGraph;\n  } else {\n    //change the order of the parameters\n    targetNode = newEdge;\n    sourceNode = parentNode;\n    newEdge = newGraph;\n    var sourceGraph = sourceNode.getOwner();\n    var targetGraph = targetNode.getOwner();\n\n    if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n      throw \"Source not in this graph mgr!\";\n    }\n    if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n      throw \"Target not in this graph mgr!\";\n    }\n\n    if (sourceGraph == targetGraph) {\n      newEdge.isInterGraph = false;\n      return sourceGraph.add(newEdge, sourceNode, targetNode);\n    } else {\n      newEdge.isInterGraph = true;\n\n      // set source and target\n      newEdge.source = sourceNode;\n      newEdge.target = targetNode;\n\n      // add edge to inter-graph edge list\n      if (this.edges.indexOf(newEdge) > -1) {\n        throw \"Edge already in inter-graph edge list!\";\n      }\n\n      this.edges.push(newEdge);\n\n      // add edge to source and target incidency lists\n      if (!(newEdge.source != null && newEdge.target != null)) {\n        throw \"Edge source and/or target is null!\";\n      }\n\n      if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n        throw \"Edge already in source and/or target incidency list!\";\n      }\n\n      newEdge.source.edges.push(newEdge);\n      newEdge.target.edges.push(newEdge);\n\n      return newEdge;\n    }\n  }\n};\n\nLGraphManager.prototype.remove = function (lObj) {\n  if (lObj instanceof LGraph) {\n    var graph = lObj;\n    if (graph.getGraphManager() != this) {\n      throw \"Graph not in this graph mgr\";\n    }\n    if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n      throw \"Invalid parent node!\";\n    }\n\n    // first the edges (make a copy to do it safely)\n    var edgesToBeRemoved = [];\n\n    edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n      graph.remove(edge);\n    }\n\n    // then the nodes (make a copy to do it safely)\n    var nodesToBeRemoved = [];\n\n    nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n\n    var node;\n    s = nodesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      node = nodesToBeRemoved[i];\n      graph.remove(node);\n    }\n\n    // check if graph is the root\n    if (graph == this.rootGraph) {\n      this.setRootGraph(null);\n    }\n\n    // now remove the graph itself\n    var index = this.graphs.indexOf(graph);\n    this.graphs.splice(index, 1);\n\n    // also reset the parent of the graph\n    graph.parent = null;\n  } else if (lObj instanceof LEdge) {\n    edge = lObj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!edge.isInterGraph) {\n      throw \"Not an inter-graph edge!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n\n    // remove edge from source and target nodes' incidency lists\n\n    if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    var index = edge.source.edges.indexOf(edge);\n    edge.source.edges.splice(index, 1);\n    index = edge.target.edges.indexOf(edge);\n    edge.target.edges.splice(index, 1);\n\n    // remove edge from owner graph manager's inter-graph edge list\n\n    if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n      throw \"Edge owner graph or owner graph manager is null!\";\n    }\n    if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n      throw \"Not in owner graph manager's edge list!\";\n    }\n\n    var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n    edge.source.owner.getGraphManager().edges.splice(index, 1);\n  }\n};\n\nLGraphManager.prototype.updateBounds = function () {\n  this.rootGraph.updateBounds(true);\n};\n\nLGraphManager.prototype.getGraphs = function () {\n  return this.graphs;\n};\n\nLGraphManager.prototype.getAllNodes = function () {\n  if (this.allNodes == null) {\n    var nodeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < s; i++) {\n      nodeList = nodeList.concat(graphs[i].getNodes());\n    }\n    this.allNodes = nodeList;\n  }\n  return this.allNodes;\n};\n\nLGraphManager.prototype.resetAllNodes = function () {\n  this.allNodes = null;\n};\n\nLGraphManager.prototype.resetAllEdges = function () {\n  this.allEdges = null;\n};\n\nLGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n  this.allNodesToApplyGravitation = null;\n};\n\nLGraphManager.prototype.getAllEdges = function () {\n  if (this.allEdges == null) {\n    var edgeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < graphs.length; i++) {\n      edgeList = edgeList.concat(graphs[i].getEdges());\n    }\n\n    edgeList = edgeList.concat(this.edges);\n\n    this.allEdges = edgeList;\n  }\n  return this.allEdges;\n};\n\nLGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n  return this.allNodesToApplyGravitation;\n};\n\nLGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n  if (this.allNodesToApplyGravitation != null) {\n    throw \"assert failed\";\n  }\n\n  this.allNodesToApplyGravitation = nodeList;\n};\n\nLGraphManager.prototype.getRoot = function () {\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.setRootGraph = function (graph) {\n  if (graph.getGraphManager() != this) {\n    throw \"Root not in this graph mgr!\";\n  }\n\n  this.rootGraph = graph;\n  // root graph must have a root node associated with it for convenience\n  if (graph.parent == null) {\n    graph.parent = this.layout.newNode(\"Root node\");\n  }\n};\n\nLGraphManager.prototype.getLayout = function () {\n  return this.layout;\n};\n\nLGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n  if (!(firstNode != null && secondNode != null)) {\n    throw \"assert failed\";\n  }\n\n  if (firstNode == secondNode) {\n    return true;\n  }\n  // Is second node an ancestor of the first one?\n  var ownerGraph = firstNode.getOwner();\n  var parentNode;\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == secondNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n  // Is first node an ancestor of the second one?\n  ownerGraph = secondNode.getOwner();\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == firstNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n\n  return false;\n};\n\nLGraphManager.prototype.calcLowestCommonAncestors = function () {\n  var edge;\n  var sourceNode;\n  var targetNode;\n  var sourceAncestorGraph;\n  var targetAncestorGraph;\n\n  var edges = this.getAllEdges();\n  var s = edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = edges[i];\n\n    sourceNode = edge.source;\n    targetNode = edge.target;\n    edge.lca = null;\n    edge.sourceInLca = sourceNode;\n    edge.targetInLca = targetNode;\n\n    if (sourceNode == targetNode) {\n      edge.lca = sourceNode.getOwner();\n      continue;\n    }\n\n    sourceAncestorGraph = sourceNode.getOwner();\n\n    while (edge.lca == null) {\n      edge.targetInLca = targetNode;\n      targetAncestorGraph = targetNode.getOwner();\n\n      while (edge.lca == null) {\n        if (targetAncestorGraph == sourceAncestorGraph) {\n          edge.lca = targetAncestorGraph;\n          break;\n        }\n\n        if (targetAncestorGraph == this.rootGraph) {\n          break;\n        }\n\n        if (edge.lca != null) {\n          throw \"assert failed\";\n        }\n        edge.targetInLca = targetAncestorGraph.getParent();\n        targetAncestorGraph = edge.targetInLca.getOwner();\n      }\n\n      if (sourceAncestorGraph == this.rootGraph) {\n        break;\n      }\n\n      if (edge.lca == null) {\n        edge.sourceInLca = sourceAncestorGraph.getParent();\n        sourceAncestorGraph = edge.sourceInLca.getOwner();\n      }\n    }\n\n    if (edge.lca == null) {\n      throw \"assert failed\";\n    }\n  }\n};\n\nLGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n  if (firstNode == secondNode) {\n    return firstNode.getOwner();\n  }\n  var firstOwnerGraph = firstNode.getOwner();\n\n  do {\n    if (firstOwnerGraph == null) {\n      break;\n    }\n    var secondOwnerGraph = secondNode.getOwner();\n\n    do {\n      if (secondOwnerGraph == null) {\n        break;\n      }\n\n      if (secondOwnerGraph == firstOwnerGraph) {\n        return secondOwnerGraph;\n      }\n      secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n    } while (true);\n\n    firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n  } while (true);\n\n  return firstOwnerGraph;\n};\n\nLGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n  if (graph == null && depth == null) {\n    graph = this.rootGraph;\n    depth = 1;\n  }\n  var node;\n\n  var nodes = graph.getNodes();\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    node = nodes[i];\n    node.inclusionTreeDepth = depth;\n\n    if (node.child != null) {\n      this.calcInclusionTreeDepths(node.child, depth + 1);\n    }\n  }\n};\n\nLGraphManager.prototype.includesInvalidEdge = function () {\n  var edge;\n\n  var s = this.edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = this.edges[i];\n\n    if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = LGraphManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0);\n\nfunction FDLayoutConstants() {}\n\n//FDLayoutConstants inherits static props in LayoutConstants\nfor (var prop in LayoutConstants) {\n  FDLayoutConstants[prop] = LayoutConstants[prop];\n}\n\nFDLayoutConstants.MAX_ITERATIONS = 2500;\n\nFDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\nFDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\nFDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\nFDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\nFDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\nFDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\nFDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\nFDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\nFDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\nFDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\nFDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\nFDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\nFDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\nFDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\nFDLayoutConstants.MIN_EDGE_LENGTH = 1;\nFDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n\nmodule.exports = FDLayoutConstants;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * This class maintains a list of static geometry related utility methods.\n *\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar Point = __webpack_require__(12);\n\nfunction IGeometry() {}\n\n/**\n * This method calculates *half* the amount in x and y directions of the two\n * input rectangles needed to separate them keeping their respective\n * positioning, and returns the result in the input array. An input\n * separation buffer added to the amount in both directions. We assume that\n * the two rectangles do intersect.\n */\nIGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n  if (!rectA.intersects(rectB)) {\n    throw \"assert failed\";\n  }\n\n  var directions = new Array(2);\n\n  this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n\n  overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n  overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y);\n\n  // update the overlapping amounts for the following cases:\n  if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n    /* Case x.1:\n    *\n    * rectA\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectB\n    */\n    overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n  } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n    /* Case x.2:\n    *\n    * rectB\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectA\n    */\n    overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n  }\n  if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n    /* Case y.1:\n     *          ________ rectA\n     *         |\n     *         |\n     *   ______|____  rectB\n     *         |    |\n     *         |    |\n     *   ______|____|\n     *         |\n     *         |\n     *         |________\n     *\n     */\n    overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n  } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n    /* Case y.2:\n    *          ________ rectB\n    *         |\n    *         |\n    *   ______|____  rectA\n    *         |    |\n    *         |    |\n    *   ______|____|\n    *         |\n    *         |\n    *         |________\n    *\n    */\n    overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n  }\n\n  // find slope of the line passes two centers\n  var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX()));\n  // if centers are overlapped\n  if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n    // assume the slope is 1 (45 degree)\n    slope = 1.0;\n  }\n\n  var moveByY = slope * overlapAmount[0];\n  var moveByX = overlapAmount[1] / slope;\n  if (overlapAmount[0] < moveByX) {\n    moveByX = overlapAmount[0];\n  } else {\n    moveByY = overlapAmount[1];\n  }\n  // return half the amount so that if each rectangle is moved by these\n  // amounts in opposite directions, overlap will be resolved\n  overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n  overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n};\n\n/**\n * This method decides the separation direction of overlapping nodes\n *\n * if directions[0] = -1, then rectA goes left\n * if directions[0] = 1,  then rectA goes right\n * if directions[1] = -1, then rectA goes up\n * if directions[1] = 1,  then rectA goes down\n */\nIGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n  if (rectA.getCenterX() < rectB.getCenterX()) {\n    directions[0] = -1;\n  } else {\n    directions[0] = 1;\n  }\n\n  if (rectA.getCenterY() < rectB.getCenterY()) {\n    directions[1] = -1;\n  } else {\n    directions[1] = 1;\n  }\n};\n\n/**\n * This method calculates the intersection (clipping) points of the two\n * input rectangles with line segment defined by the centers of these two\n * rectangles. The clipping points are saved in the input double array and\n * whether or not the two rectangles overlap is returned.\n */\nIGeometry.getIntersection2 = function (rectA, rectB, result) {\n  //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n  var p1x = rectA.getCenterX();\n  var p1y = rectA.getCenterY();\n  var p2x = rectB.getCenterX();\n  var p2y = rectB.getCenterY();\n\n  //if two rectangles intersect, then clipping points are centers\n  if (rectA.intersects(rectB)) {\n    result[0] = p1x;\n    result[1] = p1y;\n    result[2] = p2x;\n    result[3] = p2y;\n    return true;\n  }\n  //variables for rectA\n  var topLeftAx = rectA.getX();\n  var topLeftAy = rectA.getY();\n  var topRightAx = rectA.getRight();\n  var bottomLeftAx = rectA.getX();\n  var bottomLeftAy = rectA.getBottom();\n  var bottomRightAx = rectA.getRight();\n  var halfWidthA = rectA.getWidthHalf();\n  var halfHeightA = rectA.getHeightHalf();\n  //variables for rectB\n  var topLeftBx = rectB.getX();\n  var topLeftBy = rectB.getY();\n  var topRightBx = rectB.getRight();\n  var bottomLeftBx = rectB.getX();\n  var bottomLeftBy = rectB.getBottom();\n  var bottomRightBx = rectB.getRight();\n  var halfWidthB = rectB.getWidthHalf();\n  var halfHeightB = rectB.getHeightHalf();\n\n  //flag whether clipping points are found\n  var clipPointAFound = false;\n  var clipPointBFound = false;\n\n  // line is vertical\n  if (p1x === p2x) {\n    if (p1y > p2y) {\n      result[0] = p1x;\n      result[1] = topLeftAy;\n      result[2] = p2x;\n      result[3] = bottomLeftBy;\n      return false;\n    } else if (p1y < p2y) {\n      result[0] = p1x;\n      result[1] = bottomLeftAy;\n      result[2] = p2x;\n      result[3] = topLeftBy;\n      return false;\n    } else {\n      //not line, return null;\n    }\n  }\n  // line is horizontal\n  else if (p1y === p2y) {\n      if (p1x > p2x) {\n        result[0] = topLeftAx;\n        result[1] = p1y;\n        result[2] = topRightBx;\n        result[3] = p2y;\n        return false;\n      } else if (p1x < p2x) {\n        result[0] = topRightAx;\n        result[1] = p1y;\n        result[2] = topLeftBx;\n        result[3] = p2y;\n        return false;\n      } else {\n        //not valid line, return null;\n      }\n    } else {\n      //slopes of rectA's and rectB's diagonals\n      var slopeA = rectA.height / rectA.width;\n      var slopeB = rectB.height / rectB.width;\n\n      //slope of line between center of rectA and center of rectB\n      var slopePrime = (p2y - p1y) / (p2x - p1x);\n      var cardinalDirectionA = void 0;\n      var cardinalDirectionB = void 0;\n      var tempPointAx = void 0;\n      var tempPointAy = void 0;\n      var tempPointBx = void 0;\n      var tempPointBy = void 0;\n\n      //determine whether clipping point is the corner of nodeA\n      if (-slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = bottomLeftAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = topRightAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        }\n      } else if (slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = topLeftAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = bottomRightAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        }\n      }\n\n      //determine whether clipping point is the corner of nodeB\n      if (-slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = bottomLeftBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = topRightBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        }\n      } else if (slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = topLeftBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = bottomRightBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        }\n      }\n\n      //if both clipping points are corners\n      if (clipPointAFound && clipPointBFound) {\n        return false;\n      }\n\n      //determine Cardinal Direction of rectangles\n      if (p1x > p2x) {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n        }\n      } else {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n        }\n      }\n      //calculate clipping Point if it is not found before\n      if (!clipPointAFound) {\n        switch (cardinalDirectionA) {\n          case 1:\n            tempPointAy = topLeftAy;\n            tempPointAx = p1x + -halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 2:\n            tempPointAx = bottomRightAx;\n            tempPointAy = p1y + halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 3:\n            tempPointAy = bottomLeftAy;\n            tempPointAx = p1x + halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 4:\n            tempPointAx = bottomLeftAx;\n            tempPointAy = p1y + -halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n        }\n      }\n      if (!clipPointBFound) {\n        switch (cardinalDirectionB) {\n          case 1:\n            tempPointBy = topLeftBy;\n            tempPointBx = p2x + -halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 2:\n            tempPointBx = bottomRightBx;\n            tempPointBy = p2y + halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 3:\n            tempPointBy = bottomLeftBy;\n            tempPointBx = p2x + halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 4:\n            tempPointBx = bottomLeftBx;\n            tempPointBy = p2y + -halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n        }\n      }\n    }\n  return false;\n};\n\n/**\n * This method returns in which cardinal direction does input point stays\n * 1: North\n * 2: East\n * 3: South\n * 4: West\n */\nIGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n  if (slope > slopePrime) {\n    return line;\n  } else {\n    return 1 + line % 4;\n  }\n};\n\n/**\n * This method calculates the intersection of the two lines defined by\n * point pairs (s1,s2) and (f1,f2).\n */\nIGeometry.getIntersection = function (s1, s2, f1, f2) {\n  if (f2 == null) {\n    return this.getIntersection2(s1, s2, f1);\n  }\n\n  var x1 = s1.x;\n  var y1 = s1.y;\n  var x2 = s2.x;\n  var y2 = s2.y;\n  var x3 = f1.x;\n  var y3 = f1.y;\n  var x4 = f2.x;\n  var y4 = f2.y;\n  var x = void 0,\n      y = void 0; // intersection point\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // coefficients of line eqns.\n  var denom = void 0;\n\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n  denom = a1 * b2 - a2 * b1;\n\n  if (denom === 0) {\n    return null;\n  }\n\n  x = (b1 * c2 - b2 * c1) / denom;\n  y = (a2 * c1 - a1 * c2) / denom;\n\n  return new Point(x, y);\n};\n\n/**\n * This method finds and returns the angle of the vector from the + x-axis\n * in clockwise direction (compatible w/ Java coordinate system!).\n */\nIGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n  var C_angle = void 0;\n\n  if (Cx !== Nx) {\n    C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n\n    if (Nx < Cx) {\n      C_angle += Math.PI;\n    } else if (Ny < Cy) {\n      C_angle += this.TWO_PI;\n    }\n  } else if (Ny < Cy) {\n    C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n  } else {\n    C_angle = this.HALF_PI; // 90 degrees\n  }\n\n  return C_angle;\n};\n\n/**\n * This method checks whether the given two line segments (one with point\n * p1 and p2, the other with point p3 and p4) intersect at a point other\n * than these points.\n */\nIGeometry.doIntersect = function (p1, p2, p3, p4) {\n  var a = p1.x;\n  var b = p1.y;\n  var c = p2.x;\n  var d = p2.y;\n  var p = p3.x;\n  var q = p3.y;\n  var r = p4.x;\n  var s = p4.y;\n  var det = (c - a) * (s - q) - (r - p) * (d - b);\n\n  if (det === 0) {\n    return false;\n  } else {\n    var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Class Constants\n// -----------------------------------------------------------------------------\n/**\n * Some useful pre-calculated constants\n */\nIGeometry.HALF_PI = 0.5 * Math.PI;\nIGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\nIGeometry.TWO_PI = 2.0 * Math.PI;\nIGeometry.THREE_PI = 3.0 * Math.PI;\n\nmodule.exports = IGeometry;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction IMath() {}\n\n/**\n * This method returns the sign of the input value.\n */\nIMath.sign = function (value) {\n  if (value > 0) {\n    return 1;\n  } else if (value < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n\nIMath.floor = function (value) {\n  return value < 0 ? Math.ceil(value) : Math.floor(value);\n};\n\nIMath.ceil = function (value) {\n  return value < 0 ? Math.floor(value) : Math.ceil(value);\n};\n\nmodule.exports = IMath;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Integer() {}\n\nInteger.MAX_VALUE = 2147483647;\nInteger.MIN_VALUE = -2147483648;\n\nmodule.exports = Integer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar nodeFrom = function nodeFrom(value) {\n  return { value: value, next: null, prev: null };\n};\n\nvar add = function add(prev, node, next, list) {\n  if (prev !== null) {\n    prev.next = node;\n  } else {\n    list.head = node;\n  }\n\n  if (next !== null) {\n    next.prev = node;\n  } else {\n    list.tail = node;\n  }\n\n  node.prev = prev;\n  node.next = next;\n\n  list.length++;\n\n  return node;\n};\n\nvar _remove = function _remove(node, list) {\n  var prev = node.prev,\n      next = node.next;\n\n\n  if (prev !== null) {\n    prev.next = next;\n  } else {\n    list.head = next;\n  }\n\n  if (next !== null) {\n    next.prev = prev;\n  } else {\n    list.tail = prev;\n  }\n\n  node.prev = node.next = null;\n\n  list.length--;\n\n  return node;\n};\n\nvar LinkedList = function () {\n  function LinkedList(vals) {\n    var _this = this;\n\n    _classCallCheck(this, LinkedList);\n\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n\n    if (vals != null) {\n      vals.forEach(function (v) {\n        return _this.push(v);\n      });\n    }\n  }\n\n  _createClass(LinkedList, [{\n    key: \"size\",\n    value: function size() {\n      return this.length;\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(val, otherNode) {\n      return add(otherNode.prev, nodeFrom(val), otherNode, this);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(val, otherNode) {\n      return add(otherNode, nodeFrom(val), otherNode.next, this);\n    }\n  }, {\n    key: \"insertNodeBefore\",\n    value: function insertNodeBefore(newNode, otherNode) {\n      return add(otherNode.prev, newNode, otherNode, this);\n    }\n  }, {\n    key: \"insertNodeAfter\",\n    value: function insertNodeAfter(newNode, otherNode) {\n      return add(otherNode, newNode, otherNode.next, this);\n    }\n  }, {\n    key: \"push\",\n    value: function push(val) {\n      return add(this.tail, nodeFrom(val), null, this);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(val) {\n      return add(null, nodeFrom(val), this.head, this);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      return _remove(node, this);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return _remove(this.tail, this).value;\n    }\n  }, {\n    key: \"popNode\",\n    value: function popNode() {\n      return _remove(this.tail, this);\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return _remove(this.head, this).value;\n    }\n  }, {\n    key: \"shiftNode\",\n    value: function shiftNode() {\n      return _remove(this.head, this);\n    }\n  }, {\n    key: \"get_object_at\",\n    value: function get_object_at(index) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        return current.value;\n      }\n    }\n  }, {\n    key: \"set_object_at\",\n    value: function set_object_at(index, value) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        current.value = value;\n      }\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nmodule.exports = LinkedList;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\r\n *This class is the javascript implementation of the Point.java class in jdk\r\n */\nfunction Point(x, y, p) {\n  this.x = null;\n  this.y = null;\n  if (x == null && y == null && p == null) {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    this.x = x;\n    this.y = y;\n  } else if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.x = p.x;\n    this.y = p.y;\n  }\n}\n\nPoint.prototype.getX = function () {\n  return this.x;\n};\n\nPoint.prototype.getY = function () {\n  return this.y;\n};\n\nPoint.prototype.getLocation = function () {\n  return new Point(this.x, this.y);\n};\n\nPoint.prototype.setLocation = function (x, y, p) {\n  if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.setLocation(p.x, p.y);\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    //if both parameters are integer just move (x,y) location\n    if (parseInt(x) == x && parseInt(y) == y) {\n      this.move(x, y);\n    } else {\n      this.x = Math.floor(x + 0.5);\n      this.y = Math.floor(y + 0.5);\n    }\n  }\n};\n\nPoint.prototype.move = function (x, y) {\n  this.x = x;\n  this.y = y;\n};\n\nPoint.prototype.translate = function (dx, dy) {\n  this.x += dx;\n  this.y += dy;\n};\n\nPoint.prototype.equals = function (obj) {\n  if (obj.constructor.name == \"Point\") {\n    var pt = obj;\n    return this.x == pt.x && this.y == pt.y;\n  }\n  return this == obj;\n};\n\nPoint.prototype.toString = function () {\n  return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n};\n\nmodule.exports = Point;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RectangleD(x, y, width, height) {\n  this.x = 0;\n  this.y = 0;\n  this.width = 0;\n  this.height = 0;\n\n  if (x != null && y != null && width != null && height != null) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\n\nRectangleD.prototype.getX = function () {\n  return this.x;\n};\n\nRectangleD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nRectangleD.prototype.getY = function () {\n  return this.y;\n};\n\nRectangleD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nRectangleD.prototype.getWidth = function () {\n  return this.width;\n};\n\nRectangleD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nRectangleD.prototype.getHeight = function () {\n  return this.height;\n};\n\nRectangleD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nRectangleD.prototype.getRight = function () {\n  return this.x + this.width;\n};\n\nRectangleD.prototype.getBottom = function () {\n  return this.y + this.height;\n};\n\nRectangleD.prototype.intersects = function (a) {\n  if (this.getRight() < a.x) {\n    return false;\n  }\n\n  if (this.getBottom() < a.y) {\n    return false;\n  }\n\n  if (a.getRight() < this.x) {\n    return false;\n  }\n\n  if (a.getBottom() < this.y) {\n    return false;\n  }\n\n  return true;\n};\n\nRectangleD.prototype.getCenterX = function () {\n  return this.x + this.width / 2;\n};\n\nRectangleD.prototype.getMinX = function () {\n  return this.getX();\n};\n\nRectangleD.prototype.getMaxX = function () {\n  return this.getX() + this.width;\n};\n\nRectangleD.prototype.getCenterY = function () {\n  return this.y + this.height / 2;\n};\n\nRectangleD.prototype.getMinY = function () {\n  return this.getY();\n};\n\nRectangleD.prototype.getMaxY = function () {\n  return this.getY() + this.height;\n};\n\nRectangleD.prototype.getWidthHalf = function () {\n  return this.width / 2;\n};\n\nRectangleD.prototype.getHeightHalf = function () {\n  return this.height / 2;\n};\n\nmodule.exports = RectangleD;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction UniqueIDGeneretor() {}\n\nUniqueIDGeneretor.lastID = 0;\n\nUniqueIDGeneretor.createID = function (obj) {\n  if (UniqueIDGeneretor.isPrimitive(obj)) {\n    return obj;\n  }\n  if (obj.uniqueID != null) {\n    return obj.uniqueID;\n  }\n  obj.uniqueID = UniqueIDGeneretor.getString();\n  UniqueIDGeneretor.lastID++;\n  return obj.uniqueID;\n};\n\nUniqueIDGeneretor.getString = function (id) {\n  if (id == null) id = UniqueIDGeneretor.lastID;\n  return \"Object#\" + id + \"\";\n};\n\nUniqueIDGeneretor.isPrimitive = function (arg) {\n  var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n  return arg == null || type != \"object\" && type != \"function\";\n};\n\nmodule.exports = UniqueIDGeneretor;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar LGraph = __webpack_require__(5);\nvar PointD = __webpack_require__(4);\nvar Transform = __webpack_require__(17);\nvar Emitter = __webpack_require__(27);\n\nfunction Layout(isRemoteUse) {\n  Emitter.call(this);\n\n  //Layout Quality: 0:draft, 1:default, 2:proof\n  this.layoutQuality = LayoutConstants.QUALITY;\n  //Whether layout should create bendpoints as needed or not\n  this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  //Whether layout should be incremental or not\n  this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n  //Whether we animate from before to after layout node positions\n  this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n  //Whether we animate the layout process or not\n  this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n  //Number iterations that should be done between two successive animations\n  this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n  /**\r\n   * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n   * they are, both spring and repulsion forces between two leaf nodes can be\r\n   * calculated without the expensive clipping point calculations, resulting\r\n   * in major speed-up.\r\n   */\n  this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  /**\r\n   * This is used for creation of bendpoints by using dummy nodes and edges.\r\n   * Maps an LEdge to its dummy bendpoint path.\r\n   */\n  this.edgeToDummyNodes = new Map();\n  this.graphManager = new LGraphManager(this);\n  this.isLayoutFinished = false;\n  this.isSubLayout = false;\n  this.isRemoteUse = false;\n\n  if (isRemoteUse != null) {\n    this.isRemoteUse = isRemoteUse;\n  }\n}\n\nLayout.RANDOM_SEED = 1;\n\nLayout.prototype = Object.create(Emitter.prototype);\n\nLayout.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLayout.prototype.getAllNodes = function () {\n  return this.graphManager.getAllNodes();\n};\n\nLayout.prototype.getAllEdges = function () {\n  return this.graphManager.getAllEdges();\n};\n\nLayout.prototype.getAllNodesToApplyGravitation = function () {\n  return this.graphManager.getAllNodesToApplyGravitation();\n};\n\nLayout.prototype.newGraphManager = function () {\n  var gm = new LGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nLayout.prototype.newGraph = function (vGraph) {\n  return new LGraph(null, this.graphManager, vGraph);\n};\n\nLayout.prototype.newNode = function (vNode) {\n  return new LNode(this.graphManager, vNode);\n};\n\nLayout.prototype.newEdge = function (vEdge) {\n  return new LEdge(null, null, vEdge);\n};\n\nLayout.prototype.checkLayoutSuccess = function () {\n  return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n};\n\nLayout.prototype.runLayout = function () {\n  this.isLayoutFinished = false;\n\n  if (this.tilingPreLayout) {\n    this.tilingPreLayout();\n  }\n\n  this.initParameters();\n  var isLayoutSuccessfull;\n\n  if (this.checkLayoutSuccess()) {\n    isLayoutSuccessfull = false;\n  } else {\n    isLayoutSuccessfull = this.layout();\n  }\n\n  if (LayoutConstants.ANIMATE === 'during') {\n    // If this is a 'during' layout animation. Layout is not finished yet. \n    // We need to perform these in index.js when layout is really finished.\n    return false;\n  }\n\n  if (isLayoutSuccessfull) {\n    if (!this.isSubLayout) {\n      this.doPostLayout();\n    }\n  }\n\n  if (this.tilingPostLayout) {\n    this.tilingPostLayout();\n  }\n\n  this.isLayoutFinished = true;\n\n  return isLayoutSuccessfull;\n};\n\n/**\r\n * This method performs the operations required after layout.\r\n */\nLayout.prototype.doPostLayout = function () {\n  //assert !isSubLayout : \"Should not be called on sub-layout!\";\n  // Propagate geometric changes to v-level objects\n  if (!this.incremental) {\n    this.transform();\n  }\n  this.update();\n};\n\n/**\r\n * This method updates the geometry of the target graph according to\r\n * calculated layout.\r\n */\nLayout.prototype.update2 = function () {\n  // update bend points\n  if (this.createBendsAsNeeded) {\n    this.createBendpointsFromDummyNodes();\n\n    // reset all edges, since the topology has changed\n    this.graphManager.resetAllEdges();\n  }\n\n  // perform edge, node and root updates if layout is not called\n  // remotely\n  if (!this.isRemoteUse) {\n    // update all edges\n    var edge;\n    var allEdges = this.graphManager.getAllEdges();\n    for (var i = 0; i < allEdges.length; i++) {\n      edge = allEdges[i];\n      //      this.update(edge);\n    }\n\n    // recursively update nodes\n    var node;\n    var nodes = this.graphManager.getRoot().getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      //      this.update(node);\n    }\n\n    // update root graph\n    this.update(this.graphManager.getRoot());\n  }\n};\n\nLayout.prototype.update = function (obj) {\n  if (obj == null) {\n    this.update2();\n  } else if (obj instanceof LNode) {\n    var node = obj;\n    if (node.getChild() != null) {\n      // since node is compound, recursively update child nodes\n      var nodes = node.getChild().getNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        update(nodes[i]);\n      }\n    }\n\n    // if the l-level node is associated with a v-level graph object,\n    // then it is assumed that the v-level node implements the\n    // interface Updatable.\n    if (node.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vNode = node.vGraphObject;\n\n      // call the update method of the interface\n      vNode.update(node);\n    }\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    // if the l-level edge is associated with a v-level graph object,\n    // then it is assumed that the v-level edge implements the\n    // interface Updatable.\n\n    if (edge.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vEdge = edge.vGraphObject;\n\n      // call the update method of the interface\n      vEdge.update(edge);\n    }\n  } else if (obj instanceof LGraph) {\n    var graph = obj;\n    // if the l-level graph is associated with a v-level graph object,\n    // then it is assumed that the v-level object implements the\n    // interface Updatable.\n\n    if (graph.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vGraph = graph.vGraphObject;\n\n      // call the update method of the interface\n      vGraph.update(graph);\n    }\n  }\n};\n\n/**\r\n * This method is used to set all layout parameters to default values\r\n * determined at compile time.\r\n */\nLayout.prototype.initParameters = function () {\n  if (!this.isSubLayout) {\n    this.layoutQuality = LayoutConstants.QUALITY;\n    this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n    this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n    this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n    this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n    this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n    this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  }\n\n  if (this.animationDuringLayout) {\n    this.animationOnLayout = false;\n  }\n};\n\nLayout.prototype.transform = function (newLeftTop) {\n  if (newLeftTop == undefined) {\n    this.transform(new PointD(0, 0));\n  } else {\n    // create a transformation object (from Eclipse to layout). When an\n    // inverse transform is applied, we get upper-left coordinate of the\n    // drawing or the root graph at given input coordinate (some margins\n    // already included in calculation of left-top).\n\n    var trans = new Transform();\n    var leftTop = this.graphManager.getRoot().updateLeftTop();\n\n    if (leftTop != null) {\n      trans.setWorldOrgX(newLeftTop.x);\n      trans.setWorldOrgY(newLeftTop.y);\n\n      trans.setDeviceOrgX(leftTop.x);\n      trans.setDeviceOrgY(leftTop.y);\n\n      var nodes = this.getAllNodes();\n      var node;\n\n      for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        node.transform(trans);\n      }\n    }\n  }\n};\n\nLayout.prototype.positionNodesRandomly = function (graph) {\n\n  if (graph == undefined) {\n    //assert !this.incremental;\n    this.positionNodesRandomly(this.getGraphManager().getRoot());\n    this.getGraphManager().getRoot().updateBounds(true);\n  } else {\n    var lNode;\n    var childGraph;\n\n    var nodes = graph.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      lNode = nodes[i];\n      childGraph = lNode.getChild();\n\n      if (childGraph == null) {\n        lNode.scatter();\n      } else if (childGraph.getNodes().length == 0) {\n        lNode.scatter();\n      } else {\n        this.positionNodesRandomly(childGraph);\n        lNode.updateBounds();\n      }\n    }\n  }\n};\n\n/**\r\n * This method returns a list of trees where each tree is represented as a\r\n * list of l-nodes. The method returns a list of size 0 when:\r\n * - The graph is not flat or\r\n * - One of the component(s) of the graph is not a tree.\r\n */\nLayout.prototype.getFlatForest = function () {\n  var flatForest = [];\n  var isForest = true;\n\n  // Quick reference for all nodes in the graph manager associated with\n  // this layout. The list should not be changed.\n  var allNodes = this.graphManager.getRoot().getNodes();\n\n  // First be sure that the graph is flat\n  var isFlat = true;\n\n  for (var i = 0; i < allNodes.length; i++) {\n    if (allNodes[i].getChild() != null) {\n      isFlat = false;\n    }\n  }\n\n  // Return empty forest if the graph is not flat.\n  if (!isFlat) {\n    return flatForest;\n  }\n\n  // Run BFS for each component of the graph.\n\n  var visited = new Set();\n  var toBeVisited = [];\n  var parents = new Map();\n  var unProcessedNodes = [];\n\n  unProcessedNodes = unProcessedNodes.concat(allNodes);\n\n  // Each iteration of this loop finds a component of the graph and\n  // decides whether it is a tree or not. If it is a tree, adds it to the\n  // forest and continued with the next component.\n\n  while (unProcessedNodes.length > 0 && isForest) {\n    toBeVisited.push(unProcessedNodes[0]);\n\n    // Start the BFS. Each iteration of this loop visits a node in a\n    // BFS manner.\n    while (toBeVisited.length > 0 && isForest) {\n      //pool operation\n      var currentNode = toBeVisited[0];\n      toBeVisited.splice(0, 1);\n      visited.add(currentNode);\n\n      // Traverse all neighbors of this node\n      var neighborEdges = currentNode.getEdges();\n\n      for (var i = 0; i < neighborEdges.length; i++) {\n        var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode);\n\n        // If BFS is not growing from this neighbor.\n        if (parents.get(currentNode) != currentNeighbor) {\n          // We haven't previously visited this neighbor.\n          if (!visited.has(currentNeighbor)) {\n            toBeVisited.push(currentNeighbor);\n            parents.set(currentNeighbor, currentNode);\n          }\n          // Since we have previously visited this neighbor and\n          // this neighbor is not parent of currentNode, given\n          // graph contains a component that is not tree, hence\n          // it is not a forest.\n          else {\n              isForest = false;\n              break;\n            }\n        }\n      }\n    }\n\n    // The graph contains a component that is not a tree. Empty\n    // previously found trees. The method will end.\n    if (!isForest) {\n      flatForest = [];\n    }\n    // Save currently visited nodes as a tree in our forest. Reset\n    // visited and parents lists. Continue with the next component of\n    // the graph, if any.\n    else {\n        var temp = [].concat(_toConsumableArray(visited));\n        flatForest.push(temp);\n        //flatForest = flatForest.concat(temp);\n        //unProcessedNodes.removeAll(visited);\n        for (var i = 0; i < temp.length; i++) {\n          var value = temp[i];\n          var index = unProcessedNodes.indexOf(value);\n          if (index > -1) {\n            unProcessedNodes.splice(index, 1);\n          }\n        }\n        visited = new Set();\n        parents = new Map();\n      }\n  }\n\n  return flatForest;\n};\n\n/**\r\n * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n * for the given edge (one per bendpoint). The existing l-level structure\r\n * is updated accordingly.\r\n */\nLayout.prototype.createDummyNodesForBendpoints = function (edge) {\n  var dummyNodes = [];\n  var prev = edge.source;\n\n  var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n\n  for (var i = 0; i < edge.bendpoints.length; i++) {\n    // create new dummy node\n    var dummyNode = this.newNode(null);\n    dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n\n    graph.add(dummyNode);\n\n    // create new dummy edge between prev and dummy node\n    var dummyEdge = this.newEdge(null);\n    this.graphManager.add(dummyEdge, prev, dummyNode);\n\n    dummyNodes.add(dummyNode);\n    prev = dummyNode;\n  }\n\n  var dummyEdge = this.newEdge(null);\n  this.graphManager.add(dummyEdge, prev, edge.target);\n\n  this.edgeToDummyNodes.set(edge, dummyNodes);\n\n  // remove real edge from graph manager if it is inter-graph\n  if (edge.isInterGraph()) {\n    this.graphManager.remove(edge);\n  }\n  // else, remove the edge from the current graph\n  else {\n      graph.remove(edge);\n    }\n\n  return dummyNodes;\n};\n\n/**\r\n * This method creates bendpoints for edges from the dummy nodes\r\n * at l-level.\r\n */\nLayout.prototype.createBendpointsFromDummyNodes = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n\n  for (var k = 0; k < edges.length; k++) {\n    var lEdge = edges[k];\n\n    if (lEdge.bendpoints.length > 0) {\n      var path = this.edgeToDummyNodes.get(lEdge);\n\n      for (var i = 0; i < path.length; i++) {\n        var dummyNode = path[i];\n        var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY());\n\n        // update bendpoint's location according to dummy node\n        var ebp = lEdge.bendpoints.get(i);\n        ebp.x = p.x;\n        ebp.y = p.y;\n\n        // remove the dummy node, dummy edges incident with this\n        // dummy node is also removed (within the remove method)\n        dummyNode.getOwner().remove(dummyNode);\n      }\n\n      // add the real edge to graph\n      this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n    }\n  }\n};\n\nLayout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n  if (minDiv != undefined && maxMul != undefined) {\n    var value = defaultValue;\n\n    if (sliderValue <= 50) {\n      var minValue = defaultValue / minDiv;\n      value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n    } else {\n      var maxValue = defaultValue * maxMul;\n      value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n    }\n\n    return value;\n  } else {\n    var a, b;\n\n    if (sliderValue <= 50) {\n      a = 9.0 * defaultValue / 500.0;\n      b = defaultValue / 10.0;\n    } else {\n      a = 9.0 * defaultValue / 50.0;\n      b = -8 * defaultValue;\n    }\n\n    return a * sliderValue + b;\n  }\n};\n\n/**\r\n * This method finds and returns the center of the given nodes, assuming\r\n * that the given nodes form a tree in themselves.\r\n */\nLayout.findCenterOfTree = function (nodes) {\n  var list = [];\n  list = list.concat(nodes);\n\n  var removedNodes = [];\n  var remainingDegrees = new Map();\n  var foundCenter = false;\n  var centerNode = null;\n\n  if (list.length == 1 || list.length == 2) {\n    foundCenter = true;\n    centerNode = list[0];\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    var node = list[i];\n    var degree = node.getNeighborsList().size;\n    remainingDegrees.set(node, node.getNeighborsList().size);\n\n    if (degree == 1) {\n      removedNodes.push(node);\n    }\n  }\n\n  var tempList = [];\n  tempList = tempList.concat(removedNodes);\n\n  while (!foundCenter) {\n    var tempList2 = [];\n    tempList2 = tempList2.concat(tempList);\n    tempList = [];\n\n    for (var i = 0; i < list.length; i++) {\n      var node = list[i];\n\n      var index = list.indexOf(node);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n\n      var neighbours = node.getNeighborsList();\n\n      neighbours.forEach(function (neighbour) {\n        if (removedNodes.indexOf(neighbour) < 0) {\n          var otherDegree = remainingDegrees.get(neighbour);\n          var newDegree = otherDegree - 1;\n\n          if (newDegree == 1) {\n            tempList.push(neighbour);\n          }\n\n          remainingDegrees.set(neighbour, newDegree);\n        }\n      });\n    }\n\n    removedNodes = removedNodes.concat(tempList);\n\n    if (list.length == 1 || list.length == 2) {\n      foundCenter = true;\n      centerNode = list[0];\n    }\n  }\n\n  return centerNode;\n};\n\n/**\r\n * During the coarsening process, this layout may be referenced by two graph managers\r\n * this setter function grants access to change the currently being used graph manager\r\n */\nLayout.prototype.setGraphManager = function (gm) {\n  this.graphManager = gm;\n};\n\nmodule.exports = Layout;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RandomSeed() {}\n// adapted from: https://stackoverflow.com/a/19303725\nRandomSeed.seed = 1;\nRandomSeed.x = 0;\n\nRandomSeed.nextDouble = function () {\n  RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n  return RandomSeed.x - Math.floor(RandomSeed.x);\n};\n\nmodule.exports = RandomSeed;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar PointD = __webpack_require__(4);\n\nfunction Transform(x, y) {\n  this.lworldOrgX = 0.0;\n  this.lworldOrgY = 0.0;\n  this.ldeviceOrgX = 0.0;\n  this.ldeviceOrgY = 0.0;\n  this.lworldExtX = 1.0;\n  this.lworldExtY = 1.0;\n  this.ldeviceExtX = 1.0;\n  this.ldeviceExtY = 1.0;\n}\n\nTransform.prototype.getWorldOrgX = function () {\n  return this.lworldOrgX;\n};\n\nTransform.prototype.setWorldOrgX = function (wox) {\n  this.lworldOrgX = wox;\n};\n\nTransform.prototype.getWorldOrgY = function () {\n  return this.lworldOrgY;\n};\n\nTransform.prototype.setWorldOrgY = function (woy) {\n  this.lworldOrgY = woy;\n};\n\nTransform.prototype.getWorldExtX = function () {\n  return this.lworldExtX;\n};\n\nTransform.prototype.setWorldExtX = function (wex) {\n  this.lworldExtX = wex;\n};\n\nTransform.prototype.getWorldExtY = function () {\n  return this.lworldExtY;\n};\n\nTransform.prototype.setWorldExtY = function (wey) {\n  this.lworldExtY = wey;\n};\n\n/* Device related */\n\nTransform.prototype.getDeviceOrgX = function () {\n  return this.ldeviceOrgX;\n};\n\nTransform.prototype.setDeviceOrgX = function (dox) {\n  this.ldeviceOrgX = dox;\n};\n\nTransform.prototype.getDeviceOrgY = function () {\n  return this.ldeviceOrgY;\n};\n\nTransform.prototype.setDeviceOrgY = function (doy) {\n  this.ldeviceOrgY = doy;\n};\n\nTransform.prototype.getDeviceExtX = function () {\n  return this.ldeviceExtX;\n};\n\nTransform.prototype.setDeviceExtX = function (dex) {\n  this.ldeviceExtX = dex;\n};\n\nTransform.prototype.getDeviceExtY = function () {\n  return this.ldeviceExtY;\n};\n\nTransform.prototype.setDeviceExtY = function (dey) {\n  this.ldeviceExtY = dey;\n};\n\nTransform.prototype.transformX = function (x) {\n  var xDevice = 0.0;\n  var worldExtX = this.lworldExtX;\n  if (worldExtX != 0.0) {\n    xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n  }\n\n  return xDevice;\n};\n\nTransform.prototype.transformY = function (y) {\n  var yDevice = 0.0;\n  var worldExtY = this.lworldExtY;\n  if (worldExtY != 0.0) {\n    yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n  }\n\n  return yDevice;\n};\n\nTransform.prototype.inverseTransformX = function (x) {\n  var xWorld = 0.0;\n  var deviceExtX = this.ldeviceExtX;\n  if (deviceExtX != 0.0) {\n    xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n  }\n\n  return xWorld;\n};\n\nTransform.prototype.inverseTransformY = function (y) {\n  var yWorld = 0.0;\n  var deviceExtY = this.ldeviceExtY;\n  if (deviceExtY != 0.0) {\n    yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n  }\n  return yWorld;\n};\n\nTransform.prototype.inverseTransformPoint = function (inPoint) {\n  var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n  return outPoint;\n};\n\nmodule.exports = Transform;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar Layout = __webpack_require__(15);\nvar FDLayoutConstants = __webpack_require__(7);\nvar LayoutConstants = __webpack_require__(0);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction FDLayout() {\n  Layout.call(this);\n\n  this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n  this.idealEdgeLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n  this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n  this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n  this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n  this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n  this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n  this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n  this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n  this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.totalDisplacement = 0.0;\n  this.oldTotalDisplacement = 0.0;\n  this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n}\n\nFDLayout.prototype = Object.create(Layout.prototype);\n\nfor (var prop in Layout) {\n  FDLayout[prop] = Layout[prop];\n}\n\nFDLayout.prototype.initParameters = function () {\n  Layout.prototype.initParameters.call(this, arguments);\n\n  this.totalIterations = 0;\n  this.notAnimatedIterations = 0;\n\n  this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n\n  this.grid = [];\n};\n\nFDLayout.prototype.calcIdealEdgeLengths = function () {\n  var edge;\n  var lcaDepth;\n  var source;\n  var target;\n  var sizeOfSourceInLca;\n  var sizeOfTargetInLca;\n\n  var allEdges = this.getGraphManager().getAllEdges();\n  for (var i = 0; i < allEdges.length; i++) {\n    edge = allEdges[i];\n\n    edge.idealLength = this.idealEdgeLength;\n\n    if (edge.isInterGraph) {\n      source = edge.getSource();\n      target = edge.getTarget();\n\n      sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n      sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n\n      if (this.useSmartIdealEdgeLengthCalculation) {\n        edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n      }\n\n      lcaDepth = edge.getLca().getInclusionTreeDepth();\n\n      edge.idealLength += FDLayoutConstants.DEFAULT_EDGE_LENGTH * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n    }\n  }\n};\n\nFDLayout.prototype.initSpringEmbedder = function () {\n\n  var s = this.getAllNodes().length;\n  if (this.incremental) {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    }\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n  } else {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    } else {\n      this.coolingFactor = 1.0;\n    }\n    this.initialCoolingFactor = this.coolingFactor;\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n  }\n\n  this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n\n  this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n\n  this.repulsionRange = this.calcRepulsionRange();\n};\n\nFDLayout.prototype.calcSpringForces = function () {\n  var lEdges = this.getAllEdges();\n  var edge;\n\n  for (var i = 0; i < lEdges.length; i++) {\n    edge = lEdges[i];\n\n    this.calcSpringForce(edge, edge.idealLength);\n  }\n};\n\nFDLayout.prototype.calcRepulsionForces = function () {\n  var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var i, j;\n  var nodeA, nodeB;\n  var lNodes = this.getAllNodes();\n  var processedNodeSet;\n\n  if (this.useFRGridVariant) {\n    if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n      this.updateGrid();\n    }\n\n    processedNodeSet = new Set();\n\n    // calculate repulsion forces between each nodes and its surrounding\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n      this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n      processedNodeSet.add(nodeA);\n    }\n  } else {\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n\n      for (j = i + 1; j < lNodes.length; j++) {\n        nodeB = lNodes[j];\n\n        // If both nodes are not members of the same graph, skip.\n        if (nodeA.getOwner() != nodeB.getOwner()) {\n          continue;\n        }\n\n        this.calcRepulsionForce(nodeA, nodeB);\n      }\n    }\n  }\n};\n\nFDLayout.prototype.calcGravitationalForces = function () {\n  var node;\n  var lNodes = this.getAllNodesToApplyGravitation();\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    this.calcGravitationalForce(node);\n  }\n};\n\nFDLayout.prototype.moveNodes = function () {\n  var lNodes = this.getAllNodes();\n  var node;\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.move();\n  }\n};\n\nFDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n  var sourceNode = edge.getSource();\n  var targetNode = edge.getTarget();\n\n  var length;\n  var springForce;\n  var springForceX;\n  var springForceY;\n\n  // Update edge length\n  if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n    edge.updateLengthSimple();\n  } else {\n    edge.updateLength();\n\n    if (edge.isOverlapingSourceAndTarget) {\n      return;\n    }\n  }\n\n  length = edge.getLength();\n\n  if (length == 0) return;\n\n  // Calculate spring forces\n  springForce = this.springConstant * (length - idealLength);\n\n  // Project force onto x and y axes\n  springForceX = springForce * (edge.lengthX / length);\n  springForceY = springForce * (edge.lengthY / length);\n\n  // Apply forces on the end nodes\n  sourceNode.springForceX += springForceX;\n  sourceNode.springForceY += springForceY;\n  targetNode.springForceX -= springForceX;\n  targetNode.springForceY -= springForceY;\n};\n\nFDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n  var rectA = nodeA.getRect();\n  var rectB = nodeB.getRect();\n  var overlapAmount = new Array(2);\n  var clipPoints = new Array(4);\n  var distanceX;\n  var distanceY;\n  var distanceSquared;\n  var distance;\n  var repulsionForce;\n  var repulsionForceX;\n  var repulsionForceY;\n\n  if (rectA.intersects(rectB)) // two nodes overlap\n    {\n      // calculate separation amount in x and y directions\n      IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n\n      repulsionForceX = 2 * overlapAmount[0];\n      repulsionForceY = 2 * overlapAmount[1];\n\n      var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren);\n\n      // Apply forces on the two nodes\n      nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n      nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n      nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n      nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n    } else // no overlap\n    {\n      // calculate distance\n\n      if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null) // simply base repulsion on distance of node centers\n        {\n          distanceX = rectB.getCenterX() - rectA.getCenterX();\n          distanceY = rectB.getCenterY() - rectA.getCenterY();\n        } else // use clipping points\n        {\n          IGeometry.getIntersection(rectA, rectB, clipPoints);\n\n          distanceX = clipPoints[2] - clipPoints[0];\n          distanceY = clipPoints[3] - clipPoints[1];\n        }\n\n      // No repulsion range. FR grid variant should take care of this.\n      if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      distanceSquared = distanceX * distanceX + distanceY * distanceY;\n      distance = Math.sqrt(distanceSquared);\n\n      repulsionForce = this.repulsionConstant * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared;\n\n      // Project force onto x and y axes\n      repulsionForceX = repulsionForce * distanceX / distance;\n      repulsionForceY = repulsionForce * distanceY / distance;\n\n      // Apply forces on the two nodes    \n      nodeA.repulsionForceX -= repulsionForceX;\n      nodeA.repulsionForceY -= repulsionForceY;\n      nodeB.repulsionForceX += repulsionForceX;\n      nodeB.repulsionForceY += repulsionForceY;\n    }\n};\n\nFDLayout.prototype.calcGravitationalForce = function (node) {\n  var ownerGraph;\n  var ownerCenterX;\n  var ownerCenterY;\n  var distanceX;\n  var distanceY;\n  var absDistanceX;\n  var absDistanceY;\n  var estimatedSize;\n  ownerGraph = node.getOwner();\n\n  ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n  ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n  distanceX = node.getCenterX() - ownerCenterX;\n  distanceY = node.getCenterY() - ownerCenterY;\n  absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n  absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n\n  if (node.getOwner() == this.graphManager.getRoot()) // in the root graph\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX;\n        node.gravitationForceY = -this.gravityConstant * distanceY;\n      }\n    } else // inside a compound\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n        node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n      }\n    }\n};\n\nFDLayout.prototype.isConverged = function () {\n  var converged;\n  var oscilating = false;\n\n  if (this.totalIterations > this.maxIterations / 3) {\n    oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n  }\n\n  converged = this.totalDisplacement < this.totalDisplacementThreshold;\n\n  this.oldTotalDisplacement = this.totalDisplacement;\n\n  return converged || oscilating;\n};\n\nFDLayout.prototype.animate = function () {\n  if (this.animationDuringLayout && !this.isSubLayout) {\n    if (this.notAnimatedIterations == this.animationPeriod) {\n      this.update();\n      this.notAnimatedIterations = 0;\n    } else {\n      this.notAnimatedIterations++;\n    }\n  }\n};\n\n//This method calculates the number of children (weight) for all nodes\nFDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n  var node;\n  var allNodes = this.graphManager.getAllNodes();\n\n  for (var i = 0; i < allNodes.length; i++) {\n    node = allNodes[i];\n    node.noOfChildren = node.getNoOfChildren();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: FR-Grid Variant Repulsion Force Calculation\n// -----------------------------------------------------------------------------\n\nFDLayout.prototype.calcGrid = function (graph) {\n\n  var sizeX = 0;\n  var sizeY = 0;\n\n  sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n  sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n\n  var grid = new Array(sizeX);\n\n  for (var i = 0; i < sizeX; i++) {\n    grid[i] = new Array(sizeY);\n  }\n\n  for (var i = 0; i < sizeX; i++) {\n    for (var j = 0; j < sizeY; j++) {\n      grid[i][j] = new Array();\n    }\n  }\n\n  return grid;\n};\n\nFDLayout.prototype.addNodeToGrid = function (v, left, top) {\n\n  var startX = 0;\n  var finishX = 0;\n  var startY = 0;\n  var finishY = 0;\n\n  startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n  finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n  startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n  finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n\n  for (var i = startX; i <= finishX; i++) {\n    for (var j = startY; j <= finishY; j++) {\n      this.grid[i][j].push(v);\n      v.setGridCoordinates(startX, finishX, startY, finishY);\n    }\n  }\n};\n\nFDLayout.prototype.updateGrid = function () {\n  var i;\n  var nodeA;\n  var lNodes = this.getAllNodes();\n\n  this.grid = this.calcGrid(this.graphManager.getRoot());\n\n  // put all nodes to proper grid cells\n  for (i = 0; i < lNodes.length; i++) {\n    nodeA = lNodes[i];\n    this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n  }\n};\n\nFDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n\n  if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n    var surrounding = new Set();\n    nodeA.surrounding = new Array();\n    var nodeB;\n    var grid = this.grid;\n\n    for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n      for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n        if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n          for (var k = 0; k < grid[i][j].length; k++) {\n            nodeB = grid[i][j][k];\n\n            // If both nodes are not members of the same graph, \n            // or both nodes are the same, skip.\n            if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n              continue;\n            }\n\n            // check if the repulsion force between\n            // nodeA and nodeB has already been calculated\n            if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n              var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n              var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2);\n\n              // if the distance between nodeA and nodeB \n              // is less then calculation range\n              if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                //then add nodeB to surrounding of nodeA\n                surrounding.add(nodeB);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n  }\n  for (i = 0; i < nodeA.surrounding.length; i++) {\n    this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n  }\n};\n\nFDLayout.prototype.calcRepulsionRange = function () {\n  return 0.0;\n};\n\nmodule.exports = FDLayout;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LEdge = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(7);\n\nfunction FDLayoutEdge(source, target, vEdge) {\n  LEdge.call(this, source, target, vEdge);\n  this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n}\n\nFDLayoutEdge.prototype = Object.create(LEdge.prototype);\n\nfor (var prop in LEdge) {\n  FDLayoutEdge[prop] = LEdge[prop];\n}\n\nmodule.exports = FDLayoutEdge;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LNode = __webpack_require__(3);\n\nfunction FDLayoutNode(gm, loc, size, vNode) {\n  // alternative constructor is handled inside LNode\n  LNode.call(this, gm, loc, size, vNode);\n  //Spring, repulsion and gravitational forces acting on this node\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  //Amount by which this node is to be moved in this iteration\n  this.displacementX = 0;\n  this.displacementY = 0;\n\n  //Start and finish grid coordinates that this node is fallen into\n  this.startX = 0;\n  this.finishX = 0;\n  this.startY = 0;\n  this.finishY = 0;\n\n  //Geometric neighbors of this node\n  this.surrounding = [];\n}\n\nFDLayoutNode.prototype = Object.create(LNode.prototype);\n\nfor (var prop in LNode) {\n  FDLayoutNode[prop] = LNode[prop];\n}\n\nFDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n  this.startX = _startX;\n  this.finishX = _finishX;\n  this.startY = _startY;\n  this.finishY = _finishY;\n};\n\nmodule.exports = FDLayoutNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction DimensionD(width, height) {\n  this.width = 0;\n  this.height = 0;\n  if (width !== null && height !== null) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nDimensionD.prototype.getWidth = function () {\n  return this.width;\n};\n\nDimensionD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nDimensionD.prototype.getHeight = function () {\n  return this.height;\n};\n\nDimensionD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nmodule.exports = DimensionD;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashMap() {\n  this.map = {};\n  this.keys = [];\n}\n\nHashMap.prototype.put = function (key, value) {\n  var theId = UniqueIDGeneretor.createID(key);\n  if (!this.contains(theId)) {\n    this.map[theId] = value;\n    this.keys.push(key);\n  }\n};\n\nHashMap.prototype.contains = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[key] != null;\n};\n\nHashMap.prototype.get = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[theId];\n};\n\nHashMap.prototype.keySet = function () {\n  return this.keys;\n};\n\nmodule.exports = HashMap;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashSet() {\n  this.set = {};\n}\n;\n\nHashSet.prototype.add = function (obj) {\n  var theId = UniqueIDGeneretor.createID(obj);\n  if (!this.contains(theId)) this.set[theId] = obj;\n};\n\nHashSet.prototype.remove = function (obj) {\n  delete this.set[UniqueIDGeneretor.createID(obj)];\n};\n\nHashSet.prototype.clear = function () {\n  this.set = {};\n};\n\nHashSet.prototype.contains = function (obj) {\n  return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n};\n\nHashSet.prototype.isEmpty = function () {\n  return this.size() === 0;\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\n//concats this.set to the given list\nHashSet.prototype.addAllTo = function (list) {\n  var keys = Object.keys(this.set);\n  var length = keys.length;\n  for (var i = 0; i < length; i++) {\n    list.push(this.set[keys[i]]);\n  }\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\nHashSet.prototype.addAll = function (list) {\n  var s = list.length;\n  for (var i = 0; i < s; i++) {\n    var v = list[i];\n    this.add(v);\n  }\n};\n\nmodule.exports = HashSet;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A classic Quicksort algorithm with Hoare's partition\n * - Works also on LinkedList objects\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar LinkedList = __webpack_require__(11);\n\nvar Quicksort = function () {\n    function Quicksort(A, compareFunction) {\n        _classCallCheck(this, Quicksort);\n\n        if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n\n        var length = void 0;\n        if (A instanceof LinkedList) length = A.size();else length = A.length;\n\n        this._quicksort(A, 0, length - 1);\n    }\n\n    _createClass(Quicksort, [{\n        key: '_quicksort',\n        value: function _quicksort(A, p, r) {\n            if (p < r) {\n                var q = this._partition(A, p, r);\n                this._quicksort(A, p, q);\n                this._quicksort(A, q + 1, r);\n            }\n        }\n    }, {\n        key: '_partition',\n        value: function _partition(A, p, r) {\n            var x = this._get(A, p);\n            var i = p;\n            var j = r;\n            while (true) {\n                while (this.compareFunction(x, this._get(A, j))) {\n                    j--;\n                }while (this.compareFunction(this._get(A, i), x)) {\n                    i++;\n                }if (i < j) {\n                    this._swap(A, i, j);\n                    i++;\n                    j--;\n                } else return j;\n            }\n        }\n    }, {\n        key: '_get',\n        value: function _get(object, index) {\n            if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n        }\n    }, {\n        key: '_set',\n        value: function _set(object, index, value) {\n            if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n        }\n    }, {\n        key: '_swap',\n        value: function _swap(A, i, j) {\n            var temp = this._get(A, i);\n            this._set(A, i, this._get(A, j));\n            this._set(A, j, temp);\n        }\n    }, {\n        key: '_defaultCompareFunction',\n        value: function _defaultCompareFunction(a, b) {\n            return b > a;\n        }\n    }]);\n\n    return Quicksort;\n}();\n\nmodule.exports = Quicksort;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n *\n *   Aside from the inputs, you can assign the scores for,\n *   - Match: The two characters at the current index are same.\n *   - Mismatch: The two characters at the current index are different.\n *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n */\n\nvar NeedlemanWunsch = function () {\n    function NeedlemanWunsch(sequence1, sequence2) {\n        var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n        var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n\n        _classCallCheck(this, NeedlemanWunsch);\n\n        this.sequence1 = sequence1;\n        this.sequence2 = sequence2;\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n\n        // Just the remove redundancy\n        this.iMax = sequence1.length + 1;\n        this.jMax = sequence2.length + 1;\n\n        // Grid matrix of scores\n        this.grid = new Array(this.iMax);\n        for (var i = 0; i < this.iMax; i++) {\n            this.grid[i] = new Array(this.jMax);\n\n            for (var j = 0; j < this.jMax; j++) {\n                this.grid[i][j] = 0;\n            }\n        }\n\n        // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n        this.tracebackGrid = new Array(this.iMax);\n        for (var _i = 0; _i < this.iMax; _i++) {\n            this.tracebackGrid[_i] = new Array(this.jMax);\n\n            for (var _j = 0; _j < this.jMax; _j++) {\n                this.tracebackGrid[_i][_j] = [null, null, null];\n            }\n        }\n\n        // The aligned sequences (return multiple possibilities)\n        this.alignments = [];\n\n        // Final alignment score\n        this.score = -1;\n\n        // Calculate scores and tracebacks\n        this.computeGrids();\n    }\n\n    _createClass(NeedlemanWunsch, [{\n        key: \"getScore\",\n        value: function getScore() {\n            return this.score;\n        }\n    }, {\n        key: \"getAlignments\",\n        value: function getAlignments() {\n            return this.alignments;\n        }\n\n        // Main dynamic programming procedure\n\n    }, {\n        key: \"computeGrids\",\n        value: function computeGrids() {\n            // Fill in the first row\n            for (var j = 1; j < this.jMax; j++) {\n                this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n                this.tracebackGrid[0][j] = [false, false, true];\n            }\n\n            // Fill in the first column\n            for (var i = 1; i < this.iMax; i++) {\n                this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n                this.tracebackGrid[i][0] = [false, true, false];\n            }\n\n            // Fill the rest of the grid\n            for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n                for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n                    // Find the max score(s) among [`Diag`, `Up`, `Left`]\n                    var diag = void 0;\n                    if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n\n                    var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n                    var left = this.grid[_i2][_j2 - 1] + this.gap_penalty;\n\n                    // If there exists multiple max values, capture them for multiple paths\n                    var maxOf = [diag, up, left];\n                    var indices = this.arrayAllMaxIndexes(maxOf);\n\n                    // Update Grids\n                    this.grid[_i2][_j2] = maxOf[indices[0]];\n                    this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n                }\n            }\n\n            // Update alignment score\n            this.score = this.grid[this.iMax - 1][this.jMax - 1];\n        }\n\n        // Gets all possible valid sequence combinations\n\n    }, {\n        key: \"alignmentTraceback\",\n        value: function alignmentTraceback() {\n            var inProcessAlignments = [];\n\n            inProcessAlignments.push({ pos: [this.sequence1.length, this.sequence2.length],\n                seq1: \"\",\n                seq2: \"\"\n            });\n\n            while (inProcessAlignments[0]) {\n                var current = inProcessAlignments[0];\n                var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n\n                if (directions[0]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1] - 1],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n                if (directions[1]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1]],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: '-' + current.seq2\n                    });\n                }\n                if (directions[2]) {\n                    inProcessAlignments.push({ pos: [current.pos[0], current.pos[1] - 1],\n                        seq1: '-' + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n\n                if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({ sequence1: current.seq1,\n                    sequence2: current.seq2\n                });\n\n                inProcessAlignments.shift();\n            }\n\n            return this.alignments;\n        }\n\n        // Helper Functions\n\n    }, {\n        key: \"getAllIndexes\",\n        value: function getAllIndexes(arr, val) {\n            var indexes = [],\n                i = -1;\n            while ((i = arr.indexOf(val, i + 1)) !== -1) {\n                indexes.push(i);\n            }\n            return indexes;\n        }\n    }, {\n        key: \"arrayAllMaxIndexes\",\n        value: function arrayAllMaxIndexes(array) {\n            return this.getAllIndexes(array, Math.max.apply(null, array));\n        }\n    }]);\n\n    return NeedlemanWunsch;\n}();\n\nmodule.exports = NeedlemanWunsch;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar layoutBase = function layoutBase() {\n  return;\n};\n\nlayoutBase.FDLayout = __webpack_require__(18);\nlayoutBase.FDLayoutConstants = __webpack_require__(7);\nlayoutBase.FDLayoutEdge = __webpack_require__(19);\nlayoutBase.FDLayoutNode = __webpack_require__(20);\nlayoutBase.DimensionD = __webpack_require__(21);\nlayoutBase.HashMap = __webpack_require__(22);\nlayoutBase.HashSet = __webpack_require__(23);\nlayoutBase.IGeometry = __webpack_require__(8);\nlayoutBase.IMath = __webpack_require__(9);\nlayoutBase.Integer = __webpack_require__(10);\nlayoutBase.Point = __webpack_require__(12);\nlayoutBase.PointD = __webpack_require__(4);\nlayoutBase.RandomSeed = __webpack_require__(16);\nlayoutBase.RectangleD = __webpack_require__(13);\nlayoutBase.Transform = __webpack_require__(17);\nlayoutBase.UniqueIDGeneretor = __webpack_require__(14);\nlayoutBase.Quicksort = __webpack_require__(24);\nlayoutBase.LinkedList = __webpack_require__(11);\nlayoutBase.LGraphObject = __webpack_require__(2);\nlayoutBase.LGraph = __webpack_require__(5);\nlayoutBase.LEdge = __webpack_require__(1);\nlayoutBase.LGraphManager = __webpack_require__(6);\nlayoutBase.LNode = __webpack_require__(3);\nlayoutBase.Layout = __webpack_require__(15);\nlayoutBase.LayoutConstants = __webpack_require__(0);\nlayoutBase.NeedlemanWunsch = __webpack_require__(25);\n\nmodule.exports = layoutBase;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Emitter() {\n  this.listeners = [];\n}\n\nvar p = Emitter.prototype;\n\np.addListener = function (event, callback) {\n  this.listeners.push({\n    event: event,\n    callback: callback\n  });\n};\n\np.removeListener = function (event, callback) {\n  for (var i = this.listeners.length; i >= 0; i--) {\n    var l = this.listeners[i];\n\n    if (l.event === event && l.callback === callback) {\n      this.listeners.splice(i, 1);\n    }\n  }\n};\n\np.emit = function (event, data) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    var l = this.listeners[i];\n\n    if (event === l.event) {\n      l.callback(data);\n    }\n  }\n};\n\nmodule.exports = Emitter;\n\n/***/ })\n/******/ ]);\n});"],"names":["factory","__WEBPACK_EXTERNAL_MODULE_0__","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","FDLayoutConstants","CoSEConstants","prop","DEFAULT_USE_MULTI_LEVEL_SCALING","DEFAULT_RADIAL_SEPARATION","DEFAULT_EDGE_LENGTH","DEFAULT_COMPONENT_SEPERATION","TILE","TILING_PADDING_VERTICAL","TILING_PADDING_HORIZONTAL","TREE_REDUCTION_ON_INCREMENTAL","FDLayoutEdge","CoSEEdge","source","target","vEdge","this","create","LGraph","CoSEGraph","parent","graphMgr","vGraph","LGraphManager","CoSEGraphManager","layout","FDLayoutNode","IMath","CoSENode","gm","loc","size","vNode","move","graphManager","getLayout","displacementX","coolingFactor","springForceX","repulsionForceX","gravitationForceX","noOfChildren","displacementY","springForceY","repulsionForceY","gravitationForceY","Math","abs","maxNodeDisplacement","sign","child","getNodes","length","moveBy","propogateDisplacementToChildren","totalDisplacement","dX","dY","node","nodes","getChild","setPred1","pred1","getPred1","getPred2","pred2","setNext","next","getNext","setProcessed","processed","isProcessed","FDLayout","LayoutConstants","Point","PointD","Layout","Integer","IGeometry","Transform","CoSELayout","toBeTiled","newGraphManager","newGraph","newNode","newEdge","initParameters","arguments","isSubLayout","idealEdgeLength","useSmartIdealEdgeLengthCalculation","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","springConstant","DEFAULT_SPRING_STRENGTH","repulsionConstant","DEFAULT_REPULSION_STRENGTH","gravityConstant","DEFAULT_GRAVITY_STRENGTH","compoundGravityConstant","DEFAULT_COMPOUND_GRAVITY_STRENGTH","gravityRangeFactor","DEFAULT_GRAVITY_RANGE_FACTOR","compoundGravityRangeFactor","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","prunedNodesAll","growTreeIterations","afterGrowthIterations","isTreeGrowing","isGrowthFinished","coolingCycle","maxCoolingCycle","maxIterations","CONVERGENCE_CHECK_PERIOD","finalTemperature","coolingAdjuster","DEFAULT_CREATE_BENDS_AS_NEEDED","createBendpoints","resetAllEdges","level","classicLayout","nodesWithGravity","calculateNodesToApplyGravitationTo","setAllNodesToApplyGravitation","calcNoOfChildrenForAllNodes","calcLowestCommonAncestors","calcInclusionTreeDepths","getRoot","calcEstimatedSize","calcIdealEdgeLengths","incremental","reduceTrees","resetAllNodesToApplyGravitation","allNodes","Set","getAllNodes","intersection","filter","x","has","forest","getFlatForest","positionNodesRadially","positionNodesRandomly","initSpringEmbedder","runSpringEmbedder","tick","totalIterations","isConverged","layoutQuality","max","initialCoolingFactor","pow","log","animationPeriod","ceil","initialAnimationPeriod","sqrt","updateBounds","updateGrid","growTree","DEFAULT_COOLING_FACTOR_INCREMENTAL","gridUpdateAllowed","forceToNodeSurroundingUpdate","calcSpringForces","calcRepulsionForces","calcGravitationalForces","moveNodes","animate","getPositionsData","pData","rect","id","getCenterX","y","getCenterY","w","width","h","height","layoutEnded","ANIMATE","emit","graph","nodeList","graphs","getGraphs","updateConnected","isConnected","concat","edges","getAllEdges","visited","edge","getSource","getTarget","getBendpoints","push","createDummyNodesForBendpoints","add","edgeList","getEdgeListToNode","k","multiEdge","forEach","currentStartingPoint","numberOfColumns","currentY","currentX","point","tree","centerNode","findCenterOfTree","radialLayout","floor","transform","WORLD_CENTER_X","WORLD_CENTER_Y","startingPoint","radialSep","maxDiagonalInTree","branchRadialLayout","bounds","calculateBounds","setDeviceOrgX","getMinX","setDeviceOrgY","getMinY","setWorldOrgX","setWorldOrgY","bottomRight","getMaxX","getMaxY","inverseTransformPoint","parentOfNode","startAngle","endAngle","distance","radialSeparation","halfInterval","teta","TWO_PI","x_","cos","y_","sin","setCenter","neighborEdges","childCount","getEdges","startIndex","branchCount","incEdgesCount","getEdgesBetween","temp","splice","index","indexOf","stepAngle","currentNeighbor","getOtherEnd","childStartAngle","childEndAngle","maxDiagonal","MIN_VALUE","diagonal","getDiagonal","calcRepulsionRange","groupZeroDegreeMembers","self","tempMemberGroups","memberGroups","idToDummyNode","zeroDegree","getParent","getNodeDegreeWithChildren","undefined","getToBeTiled","p_id","keys","dummyCompoundId","dummyCompound","paddingLeft","paddingRight","paddingBottom","paddingTop","dummyParentGraph","getGraphManager","parentGraph","remove","clearCompounds","childGraphMap","idToNode","performDFSOnCompounds","compoundOrder","resetAllNodes","tileCompoundMembers","clearZeroDegreeMembers","tiledZeroDegreePack","compoundNode","tileNodes","repopulateCompounds","lCompoundNode","horizontalMargin","verticalMargin","adjustLocations","tiledMemberPack","repopulateZeroDegreeMembers","tiledPack","childGraph","children","theChild","getNodeDegree","degree","fillCompexOrderByDFS","organization","compoundHorizontalMargin","compoundVerticalMargin","left","rows","row","maxHeight","j","lnode","horizontalPadding","verticalPadding","minWidth","rowWidth","rowHeight","sort","n1","n2","lNode","insertNodeToRow","canAddHorizontal","getShortestRowIndex","shiftToLastRow","rowIndex","minCompoundSize","extraHeight","r","min","Number","MAX_VALUE","getLongestRowIndex","extraWidth","sri","add_to_row_ratio","add_new_row_ratio","hDiff","longest","last","diff","instance","prevTotal","finalTotal","tilingPreLayout","tilingPostLayout","containsLeaf","prunedNodesInStepTemp","isInterGraph","getOwner","prunedNodesInStep","nodeData","findPlaceforPrunedNode","gridForPrunedNode","nodeToConnect","prunedNode","startGridX","startX","finishGridX","finishX","startGridY","startY","finishGridY","finishY","controlRegions","grid","minCount","minIndex","random","getHeight","getWidth","coseBase","layoutBase","require","DimensionD","defaults","ready","stop","quality","nodeDimensionsIncludeLabels","refresh","fit","padding","randomize","nodeRepulsion","edgeElasticity","nestingFactor","gravity","numIter","tile","animationDuration","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","_CoSELayout","_options","options","obj","extend","getUserOptions","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","MAX_ITERATIONS","QUALITY","NODE_DIMENSIONS_INCLUDE_LABELS","DEFAULT_INCREMENTAL","run","frameId","idToLNode","stopped","cy","trigger","type","eles","root","addRoot","processChildrenList","getTopMostNodes","sourceNode","data","targetNode","getPositions","ele","theId","getRect","iterateAnimated","isDone","afterReposition","one","ticksPerFrame","checkLayoutSuccess","doPostLayout","isLayoutFinished","positions","cancelAnimationFrame","animationData","isParent","pNode","position","requestAnimationFrame","addListener","runLayout","not","layoutPositions","nodesMap","roots","theNode","theNewGraph","children_of_children","dimensions","layoutDimensions","outerWidth","outerHeight","parseFloat","parseInt","css","labelWidth","boundingBox","includeLabels","includeNodes","labelHeight","labelPos","isNaN","register","cytoscape","addNodes","_node$padding","_node$x","_node$y","labelText","label","key","includes","group","addEdges","edgeData","start","end","createCytoscapeInstance","Promise","resolve","renderEl","select","append","attr","container","document","getElementById","style","selector","styleEnabled","e","info","extractPositionedNodes","map","positionedNode","extractPositionedEdges","rscratch","_private","positionedEdge","midX","midY","endX","endY","async","executeCoseBilkentLayout","_config","debug","validateLayoutData","positionedNodes","positionedEdges","error","Error","config","rootNode","Array","isArray","use","coseBilkent","__name","render2","data4Layout","svg","_ref","_ref2","insertCluster","insertEdge","insertEdgeLabel","insertMarkers","insertNode","log2","positionEdgeLabel","algorithm","_algorithm","nodeDb","clusterDb","element","markers","diagramId","subGraphsEl","insert","edgePaths","edgeLabels","all","isGroup","clusterNode","_objectSpread","nodeWithPosition","nodeEl","dir","direction","getBBox","domId","updatedLayoutData","nodeWithDimensions","layoutResult","find","points","_edge$start","_edge$end","startNode","endNode","edgeWithPath","paths","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_UNIFORM_LEAF_NODE_SIZES","DEFAULT_GRAPH_MARGIN","SIMPLE_NODE_SIZE","SIMPLE_NODE_HALF_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","WORLD_BOUNDARY","INITIAL_WORLD_BOUNDARY","LGraphObject","LEdge","isOverlapingSourceAndTarget","vGraphObject","bendpoints","getLength","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEndInGraph","otherEnd","updateLength","clipPointCoordinates","getIntersection","lengthX","lengthY","updateLengthSimple","RectangleD","RandomSeed","LNode","estimatedSize","inclusionTreeDepth","owner","setWidth","setHeight","getCenter","getLocation","getHalfTheDiagonal","setRect","upperLeft","dimension","cx","setLocation","dx","dy","to","other","getNeighborsList","neighbors","withChildren","withNeighborsList","getNoOfChildren","getEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","getLeft","getTop","getRight","getBottom","getInclusionTreeDepth","trans","top","leftTop","vLeftTop","getX","getY","setX","setY","getDifference","pt","getCopy","translate","dim","LinkedList","obj2","margin","right","bottom","obj1","edgesToBeRemoved","slice","sourceIndex","targetIndex","updateLeftTop","nodeTop","nodeLeft","recursive","nodeRight","nodeBottom","boundingRect","queue","currentNode","shift","noOfVisitedInThisGraph","visitedNode","ngraph","nnode","setRootGraph","rootGraph","parentNode","sourceGraph","targetGraph","lObj","nodesToBeRemoved","allEdges","allNodesToApplyGravitation","getAllNodesToApplyGravitation","isOneAncestorOfOther","firstNode","secondNode","ownerGraph","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","depth","includesInvalidEdge","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT_INCREMENTAL","MAX_NODE_DISPLACEMENT","MIN_REPULSION_DIST","GRID_CALCULATION_CHECK_PERIOD","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","directions","decideDirectionsForOverlappingNodes","slope","moveByY","moveByX","getIntersection2","result","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAx","tempPointAy","tempPointBx","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x1","y1","x2","y2","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","a","b","q","det","lambda","gamma","THREE_PI","_createClass","defineProperties","props","descriptor","writable","Constructor","protoProps","staticProps","nodeFrom","prev","list","head","tail","_remove","vals","_this","TypeError","_classCallCheck","v","val","otherNode","current","constructor","equals","toString","_typeof","Symbol","iterator","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","arg","_toConsumableArray","arr","arr2","from","Emitter","isRemoteUse","createBendsAsNeeded","animationOnLayout","animationDuringLayout","uniformLeafNodeSizes","edgeToDummyNodes","Map","RANDOM_SEED","isLayoutSuccessfull","update","update2","createBendpointsFromDummyNodes","newLeftTop","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","set","dummyNodes","dummyNode","Dimension","dummyEdge","lEdge","path","ebp","sliderValue","defaultValue","minDiv","maxMul","removedNodes","remainingDegrees","foundCenter","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","displacementThresholdPerNode","oldTotalDisplacement","notAnimatedIterations","useFRGridVariant","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","idealLength","totalDisplacementThreshold","repulsionRange","lEdges","calcSpringForce","nodeA","nodeB","processedNodeSet","lNodes","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForce","springForce","distanceX","distanceY","distanceSquared","repulsionForce","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","converged","oscilating","calcGrid","sizeX","sizeY","addNodeToGrid","setGridCoordinates","surrounding","_startX","_finishX","_startY","_finishY","HashMap","put","contains","keySet","HashSet","clear","isEmpty","addAllTo","addAll","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","_i","_j","alignments","score","computeGrids","_i2","_j2","maxOf","indices","arrayAllMaxIndexes","inProcessAlignments","pos","seq1","seq2","indexes","array","getAllIndexes","apply","listeners","event","callback","removeListener"],"sourceRoot":""}