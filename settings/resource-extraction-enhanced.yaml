# Resource ID Extraction Configuration  

resource_id_extraction:
  # Define extraction patterns by tool action type
  creation_tools:
    # Tools that create resources return flat JSON with resource IDs at top level
    patterns:
      # VPC - returns vpcId at top level
      - field_paths: ["vpcId"]
        resource_types: ["vpc"]
        priority: 1
        
      # Subnet - returns subnetId at top level  
      - field_paths: ["subnetId"]
        resource_types: ["subnet"]
        priority: 1
        
      # EC2 Instance - returns instanceId at top level
      - field_paths: ["instanceId"]
        resource_types: ["ec2_instance"]
        priority: 1
        
      # Security Group - returns securityGroupId at top level
      - field_paths: ["securityGroupId", "groupId"]
        resource_types: ["security_group"]
        priority: 1
        
      # Load Balancer - returns loadBalancerArn at top level
      - field_paths: ["loadBalancerArn"]
        resource_types: ["load_balancer", "alb", "nlb"]
        priority: 1
        
      # Target Group - returns targetGroupArn at top level
      - field_paths: ["targetGroupArn"]
        resource_types: ["target_group"]
        priority: 1
        
      # Auto Scaling Group - returns autoScalingGroupArn or autoScalingGroupName
      - field_paths: ["autoScalingGroupArn", "autoScalingGroupName"]
        resource_types: ["auto_scaling_group"]
        priority: 1
        
      # Launch Template - returns launchTemplateId at top level
      - field_paths: ["launchTemplateId"]
        resource_types: ["launch_template"]
        priority: 1
        
      # Key Pair - returns keyName as primary identifier
      - field_paths: ["keyName", "keyPairId"]
        resource_types: ["key_pair"]
        priority: 1
        
      # Internet Gateway - returns internetGatewayId at top level
      - field_paths: ["internetGatewayId"]
        resource_types: ["internet_gateway"]
        priority: 1
        
      # NAT Gateway - returns natGatewayId at top level
      - field_paths: ["natGatewayId"]
        resource_types: ["nat_gateway"]  
        priority: 1
        
      # Route Table - returns routeTableId at top level
      - field_paths: ["routeTableId"]
        resource_types: ["route_table"]
        priority: 1
        
      # RDS Instance - returns dbInstanceIdentifier at top level
      - field_paths: ["dbInstanceIdentifier", "dbInstanceId"]
        resource_types: ["rds_instance"]
        priority: 1
        
      # DB Subnet Group - returns dbSubnetGroupName at top level
      - field_paths: ["dbSubnetGroupName"]
        resource_types: ["db_subnet_group"]
        priority: 1
        
      # Listener - returns listenerId at top level
      - field_paths: ["listenerId"]
        resource_types: ["listener"]
        priority: 1
        
      # AMI - returns amiId at top level
      - field_paths: ["amiId", "imageId"]
        resource_types: ["ami"]
        priority: 1
        
      # DB Snapshot - returns snapshotId or dbSnapshotIdentifier at top level
      - field_paths: ["snapshotId", "dbSnapshotIdentifier"]
        resource_types: ["db_snapshot"]
        priority: 1
        
      # Route Table Association - returns associationId at top level
      - field_paths: ["associationId"]
        resource_types: ["route_table_association"]
        priority: 1
        
      # Universal fallback for any creation tool - try resourceId or id
      - field_paths: ["resourceId", "id"]
        resource_types: ["*"]
        priority: 10
        
  modification_tools:
    # Tools that modify existing resources now return IDs in response (like creation tools)
    # Modification tools (start/stop/modify) return the resource ID in the response for consistency
    patterns:
      # VPC modification - returns vpcId in response
      - field_paths: ["vpcId"]
        resource_types: ["vpc"]
        priority: 1
        
      # Instance modification (start/stop/modify-instance-type) - returns instanceId in response
      - field_paths: ["instanceId"]
        resource_types: ["ec2_instance"]
        priority: 1
        
      # Security Group modification - returns groupId in response
      - field_paths: ["securityGroupId"]
        resource_types: ["security_group"]
        priority: 1
        
      # Load Balancer modification - returns loadBalancerArn in response
      - field_paths: ["loadBalancerArn"]
        resource_types: ["load_balancer"]
        priority: 1
        
      # Target Group modification - returns targetGroupArn in response
      - field_paths: ["targetGroupArn"]
        resource_types: ["target_group"]
        priority: 1
        
      # Auto Scaling Group modification - returns autoScalingGroupName in response
      - field_paths: ["autoScalingGroupName"]
        resource_types: ["auto_scaling_group"]
        priority: 1
        
      # RDS Instance modification (start/stop) - returns dbInstanceIdentifier in response
      - field_paths: ["dbInstanceIdentifier", "dbInstanceId"]
        resource_types: ["rds_instance"]
        priority: 1
        
      # Universal fallback for modification tools
      - field_paths: ["resourceId", "id"]
        resource_types: ["*"]
        priority: 10
        
  deletion_tools:
    # Tools that delete resources receive IDs in parameters (same as modification)
    patterns:
      # VPC deletion
      - field_paths: ["vpcId"]
        resource_types: ["vpc"]
        priority: 1
        
      # Instance deletion
      - field_paths: ["instanceId", "instanceIds[0]"]
        resource_types: ["ec2_instance"]
        priority: 1
        
      # Security Group deletion
      - field_paths: ["groupId", "securityGroupId"]
        resource_types: ["security_group"]
        priority: 1
        
      # Load Balancer deletion
      - field_paths: ["loadBalancerArn"]
        resource_types: ["load_balancer"]
        priority: 1
        
      # RDS Instance deletion
      - field_paths: ["dbInstanceIdentifier", "dbInstanceId"]
        resource_types: ["rds_instance"]
        priority: 1
        
      # Universal fallback for deletion tools
      - field_paths: ["resourceId", "id"]
        resource_types: ["*"]  
        priority: 10
        
  query_tools:
    # Query tools return arrays of resources - arrays are concatenated with _ delimiter
    # Example: ["az-1a", "az-1b", "az-1c"] becomes "az-1a_az-1b_az-1c"
    # Access via {{step-id.fieldname}} for full concatenated value, or {{step-id.fieldname.0}} for indexed access
    patterns:
      # List tools return arrays - the query result itself may be what we need
        
      # For get-subnet - returns single subnet
      - field_paths: ["subnetId"]
        resource_types: ["subnet"]
        priority: 1

      # For get-ec2-instance - returns single EC2 instance
      - field_paths: ["instanceId"]
        resource_types: ["ec2_instance"]
        priority: 1

      # For get-vpc - returns single VPC
      - field_paths: ["vpcId"]
        resource_types: ["vpc"]
        priority: 1

      # For get-latest-amazon-linux-ami, get-latest-ubuntu-ami, get-latest-windows-ami
      - field_paths: ["amiId", "imageId"]
        resource_types: ["ami"]
        priority: 1

      # For get-key-pair
      - field_paths: ["keyName", "keyPairId"]
        resource_types: ["key_pair"]
        priority: 1

      # For get-availability-zones - returns single zone name
      - field_paths: ["availabilityZones"]
        resource_types: ["availability_zone"]
        priority: 1

      # For list array of subnet IDs
      - field_paths: ["subnetIds"]
        resource_types: ["subnets"]
        priority: 1

      # For list array of vpc IDs
      - field_paths: ["vpcIds"]
        resource_types: ["vpcs"]
        priority: 1

      # For list array of sg IDs
      - field_paths: ["securityGroupIds"]
        resource_types: ["security_groups"]
        priority: 1

      # Universal fallback for query tools
      - field_paths: ["resourceId", "id"]
        resource_types: ["*"]
        priority: 10
        
  association_tools:
    # Association tools create new associations and return association IDs at top level
    patterns:
      # Security group rules
      - field_paths: ["groupId", "securityGroupId"]
        resource_types: ["security_group"]
        priority: 1
        
      # Route table association - returns associationId
      - field_paths: ["associationId"]
        resource_types: ["route_table_association"]
        priority: 2
        
      # Route table - for add-route operations, the route table ID is in parameters
      - field_paths: ["routeTableId"]
        resource_types: ["route_table", "route"]
        priority: 2
        
      # Target group - for register/deregister-targets operations
      - field_paths: ["targetGroupArn"]
        resource_types: ["target_group"]
        priority: 2
        
      # Universal fallback for association tools
      - field_paths: ["resourceId", "id"]
        resource_types: ["*"]
        priority: 10
